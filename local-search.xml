<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>五.Typora使用指南</title>
    <link href="/2023/10/16/Typora%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/"/>
    <url>/2023/10/16/Typora%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<p>Typora 官网：<a href="https://typoraio.cn/">https://typoraio.cn/</a></p><p>Typora 主题：<a href="https://theme.typora.io/">https://theme.typora.io/</a></p><hr><p>激活 Typora1.7 版本：</p><ol><li><p>下载安装包到同一目录下：</p><img src="image-20231016142203255.png" alt="image-20231016142203255" style="zoom:50%;" /></li><li><p>在该目录下打开命令行终端，运行 license-gen.exe，出现激活码。</p></li><li><p>用管理员身份打开 TyporaCrack.exe。</p></li><li><p>用任意邮箱和激活码登录即可。</p></li></ol><hr><p>shift+F12 调出控制台：</p><img src="image-20231016095537228.png" alt="image-20231016095537228" style="zoom:50%;" /><hr><p>在需要分页的时候，添加分页符，导出 PDF 时可以进行分页：</p><ul><li><code>---</code></li><li><code>***</code></li><li><code>_____</code></li></ul><figure class="highlight css"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-of2b0flo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-of2b0flo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-comment">/*手动分页控制：需要手动添加分页符， &#x27;----&#x27;、&#x27;***&#x27; 、&#x27;_______&#x27; */</span><br><span class="hljs-keyword">@media</span> print, (<span class="hljs-attribute">overflow-block</span>: paged) <span class="hljs-keyword">or</span> (<span class="hljs-attribute">overflow-block</span>: optional-paged) &#123;<br>  hr &#123;<br>    <span class="hljs-attribute">page-break-after</span>: always; <span class="hljs-comment">/* CSS 2 */</span><br>    <span class="hljs-attribute">break-after</span>: region; <span class="hljs-comment">/* CSS 3+ */</span><br>    <span class="hljs-comment">/* minimal layout disruption: */</span><br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">0.1mm</span>;<br>    <span class="hljs-attribute">visibility</span>: hidden;<br>  &#125;<br>&#125;<br></code></pre></td></tr></table></div></figure><hr><p>仅支持普通的<code>html</code>标签，不支持<code>class</code>、<code>id</code>、<code>data-*</code>等自定义属性。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Typora</tag>
      
      <tag>markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>四.git常用命令</title>
    <link href="/2023/09/06/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2023/09/06/git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<p>Git文档：<a href="https://git-scm.com/docs">https://git-scm.com/docs</a></p><p>推送代码：git add .           git commit -m &quot;1&quot;             git push</p><p>拉取代码：</p><ol><li>git checkout master</li><li>git pull</li><li>git checkout dev-lan777</li><li>git merge master —no-commit</li><li>git push【sync changes】</li><li>npm run dev</li></ol><p>合并分支：</p><ol><li>git add .</li><li>git commit -m &quot;1&quot;</li><li>git push</li><li>git checkout master</li><li>git pull</li><li>git merge dev-lan777 —no-commit<ol><li>【处理merge冲突的代码后保存】</li><li>git add .</li><li>git commit -m &quot;2&quot;</li></ol></li><li>git push【maintainer角色】</li></ol><p>打包部署：</p><ol><li>npm run build:test</li><li>git add .</li><li>git commit -m &quot;2&quot;</li><li>git push</li></ol><p>删除文件夹：git bash命令：rm -rf node_modules</p><p>切换分支：git checkout -b dev-lan777</p><p>暂存修改：git stash</p><ul><li><code>git stash pop</code> 的作用是将最近一次暂存的修改应用到当前分支，并将该暂存记录从存储堆栈中移除。它的执行过程如下：<ol><li>将最近一次的暂存修改从存储堆栈中取出。</li><li>将这些修改应用到当前所在分支上。</li><li>如果应用成功，则将该暂存记录从存储堆栈中移除。</li></ol></li></ul><p>查看日志：git log —oneline</p><p>git rebase dev-lan777</p><p>上下箭头返回之前的git命令</p><p>git回退到commit_id的状态：</p><ol><li>git log：查看commit的历史记录及其对应的commit_id</li><li>git reset --hard commit_id</li><li>git push origin HEAD --force：使本地和远程的内容都回退到commit_id对应的状态。</li></ol><p><code>Auto packing the repository in background for optimum performance.See &quot;git help gc&quot; for manual housekeeping.</code>：</p><ol><li>git fsck --lost-found：出现很多&quot;dangling commit&quot;</li><li>git gc --prune&#x3D;now</li></ol><p>git推送lan-blog中的fluid主题文件夹：推送fluid后再回到lan-blog</p><ol><li>cd themes&#x2F;fluid</li><li>git add .</li><li>git commit -m &quot;1&quot;</li><li>git push</li></ol><h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><img src="image-20231012112042094.png" alt="image-20231012112042094" style="zoom:50%;" /><p>原因：在分支创建时，使用了与远程不一致的分支名。</p><p>解决方法：修改<code>git push</code>默认规则<code>git config push.default upstream</code></p>]]></content>
    
    
    
    <tags>
      
      <tag>git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>三.暑期实习问题总结</title>
    <link href="/2023/08/27/%E6%9A%91%E6%9C%9F%E5%AE%9E%E4%B9%A0%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/"/>
    <url>/2023/08/27/%E6%9A%91%E6%9C%9F%E5%AE%9E%E4%B9%A0%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<p><mark>debugger</mark></p><p>vscode中Ctrl+shift+P调出控制面板：</p><img src="image-20231009155049000.png" alt="image-20231009155049000" style="zoom:50%;" /><p>创建vue+vite+ts项目：</p><figure class="highlight bash"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-2gjy49lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-2gjy49lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm create vite@latest<br></code></pre></td></tr></table></div></figure><p>选择Vue和TypeScript：</p><img src="image-20231009150557306.png" alt="image-20231009150557306" style="zoom:50%;" /><figure class="highlight bash"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-l8uirrlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-l8uirrlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> vite-project<br>npm install<br>npm run dev<br></code></pre></td></tr></table></div></figure><img src="image-20231009151438381.png" alt="image-20231009151438381" /><p>index.html中修改网站图标和标题：</p><img src="image-20231009151528709.png" alt="image-20231009151528709" style="zoom:50%;" /><hr><p>Vue代码模板：</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-dvg4u3lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-dvg4u3lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;script setup lang=&quot;ts&quot;&gt;<br>    <br>&lt;/script&gt;<br><br>&lt;template&gt;<br><br>&lt;/template&gt;<br><br>&lt;style lang=&quot;scss&quot; scoped&gt;<br><br>&lt;/style&gt;<br></code></pre></td></tr></table></div></figure><p>在vscode管理中点击用户代码片段code snippets：文件→首选项→Configure Use Snippets→New Global Snippets file→输入名称</p><p>借助<code>https://snippet-generator.app/</code>生成代码即可：</p><img src="image-20230927172325096.png" alt="image-20230927172325096" style="zoom:50%;" /><p class="note note-danger">注意要加上{}</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-4zs2ctlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-4zs2ctlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs js">&#123;<br>    <span class="hljs-string">&quot;v3&quot;</span>: &#123;<br>      <span class="hljs-string">&quot;prefix&quot;</span>: <span class="hljs-string">&quot;v3&quot;</span>,<br>      <span class="hljs-string">&quot;body&quot;</span>: [<br>        <span class="hljs-string">&quot;&lt;script setup lang=\&quot;ts\&quot;&gt;&quot;</span>,<br>        <span class="hljs-string">&quot;    &quot;</span>,<br>        <span class="hljs-string">&quot;&lt;/script&gt;&quot;</span>,<br>        <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;&lt;template&gt;&quot;</span>,<br>        <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;&lt;/template&gt;&quot;</span>,<br>        <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;&lt;style lang=\&quot;scss\&quot; scoped&gt;&quot;</span>,<br>        <span class="hljs-string">&quot;&quot;</span>,<br>        <span class="hljs-string">&quot;&lt;/style&gt;&quot;</span><br>      ],<br>      <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;v3&quot;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></div></figure><p>在文件中使用：v3回车</p><hr><p>vs code插件：</p><ul><li>TypeScript Vue Plugin(Volar)</li><li>Vue Language Features(Volar)</li><li>Prettier-Code formatter</li><li>px2rem</li><li>Auto Close Tag</li><li>Auto Complete Tag</li><li>Auto Rename Tag</li><li>Path Intellisense</li><li>vscode-icons</li></ul><hr><h1 id="一-Form组件替换"><a href="#一-Form组件替换" class="headerlink" title="一.Form组件替换"></a>一.Form组件替换</h1><p>el-form表单二次封装：</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-a5seowlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-a5seowlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">el-form</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;form&quot;</span> <span class="hljs-attr">label-width</span>=<span class="hljs-string">&quot;50px&quot;</span> <span class="hljs-attr">label-position</span>=<span class="hljs-string">&quot;top&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;mini&quot;</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;accessInfo.isOwner&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">el-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;起始节点&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">el-select</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">el-option</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">el-option</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">el-select</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">el-form-item</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">el-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;结束节点&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">el-select</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">el-option</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">el-option</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">el-select</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">el-form-item</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">el-form</span>&gt;</span><br></code></pre></td></tr></table></div></figure><p>→</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-0sj36tlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-0sj36tlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">Form</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;form&quot;</span> <span class="hljs-attr">:formObj</span>=<span class="hljs-string">&quot;formObj&quot;</span> <span class="hljs-attr">:formData</span>=<span class="hljs-string">&quot;formData&quot;</span> <span class="hljs-attr">:labelWidth</span>=<span class="hljs-string">&quot;50&quot;</span> <span class="hljs-attr">:labelPosition</span>=<span class="hljs-string">&quot;&#x27;top&#x27;&quot;</span> <span class="hljs-attr">:size</span>=<span class="hljs-string">&quot;&#x27;mini&#x27;&quot;</span> <span class="hljs-attr">v-if</span>=<span class="hljs-string">&quot;accessInfo.isOwner&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">fromid</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">el-select</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;formData.fromid&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">el-option</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">el-option</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">el-select</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br>     <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">toid</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">el-select</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;formData.toid&quot;</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">el-option</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">el-option</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">el-select</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">Form</span>&gt;</span><br></code></pre></td></tr></table></div></figure><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-ua5wuelo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-ua5wuelo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;&lt;/template&gt;<br>&lt;script&gt;<br>    import Form from &#x27;@/components/common/Form&#x27;<br>    export default&#123;<br>        components:&#123;<br>            Form<br>        &#125;,<br>        data()&#123;<br>            return&#123;<br>                formData:&#123;<br>                    fromid: &#x27;&#x27;,<br>                    toid: &#x27;&#x27;<br>                &#125;,<br>                formObj:[<br>                    &#123;<br>                        specialFormItem: true,<br>                        specialName: &quot;fromid&quot;,<br>                        label: &quot;起始节点&quot;<br>                    &#125;,<br>                    &#123;<br>                        specialFormItem: true,<br>                        specialName: &quot;toid&quot;,<br>                        label: &quot;结束节点&quot;<br>                    &#125;<br>                ]<br>            &#125;<br>        &#125;<br>    &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></div></figure><br/><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-j8xq5llo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-j8xq5llo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">el-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;名称&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">el-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;formData.name&quot;</span> <span class="hljs-attr">:maxlength</span>=<span class="hljs-string">&quot;60&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">el-input</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">el-form-item</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">el-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;描述&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">el-input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;textarea&quot;</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;formData.desc&quot;</span> <span class="hljs-attr">:maxlength</span>=<span class="hljs-string">&quot;200&quot;</span> <span class="hljs-attr">:rows</span>=<span class="hljs-string">&quot;5&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">el-input</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">el-form-item</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">el-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;类型&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">el-select</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;formData.type&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择类型&quot;</span> <span class="hljs-attr">disabled</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;wdith:100%&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">el-option</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;HIVE&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;0&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">el-option</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">el-option</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;SQL&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;1&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">el-option</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">el-select</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">el-form-item</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">el-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;数据库&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">el-select</span> <span class="hljs-attr">filterable</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;formData.hiveDatabase&quot;</span> @<span class="hljs-attr">change</span>=<span class="hljs-string">&quot;formData.table=&#x27;&#x27;&quot;</span> <span class="hljs-attr">placeholder</span>=<span class="hljs-string">&quot;请选择数据库&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">el-option</span> <span class="hljs-attr">:label</span>=<span class="hljs-string">&quot;item.database&quot;</span> <span class="hljs-attr">:value</span>=<span class="hljs-string">&quot;item.database&quot;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&quot;index&quot;</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(item,index) in hiveDatabaseList&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">el-option</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">el-select</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">el-form-item</span>&gt;</span><br></code></pre></td></tr></table></div></figure><p>→</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-81z154lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-81z154lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">formObj</span>:[<br>    &#123;<br>        <span class="hljs-attr">input</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;名称&#x27;</span>,<br>        <span class="hljs-attr">prop</span>: <span class="hljs-string">&#x27;name&#x27;</span>,<br>        <span class="hljs-attr">maxlength</span>: <span class="hljs-number">60</span>,<br>        <span class="hljs-attr">inputStyle</span>: <span class="hljs-string">&#x27;width: 100%&#x27;</span><br>    &#125;,<br>    &#123;<br>        <span class="hljs-attr">textarea</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;描述&#x27;</span>,<br>        <span class="hljs-attr">prop</span>: <span class="hljs-string">&#x27;desc&#x27;</span>,<br>        <span class="hljs-attr">maxlength</span>: <span class="hljs-number">200</span>,<br>        <span class="hljs-attr">inputStyle</span>: <span class="hljs-string">&#x27;width: 100%&#x27;</span>,<br>        <span class="hljs-attr">autosize</span>: &#123;<span class="hljs-attr">minRows</span>: <span class="hljs-number">5</span>&#125;<br>    &#125;,<br>    &#123;<br>        <span class="hljs-attr">select</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;类型&#x27;</span>,<br>        <span class="hljs-attr">placeholder</span>: <span class="hljs-string">&#x27;请选择类型&#x27;</span>,<br>        <span class="hljs-attr">prop</span>: <span class="hljs-string">&#x27;type&#x27;</span>,<br>        <span class="hljs-attr">maxlength</span>: <span class="hljs-number">200</span>,<br>        <span class="hljs-attr">disabled</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">inputStyle</span>: <span class="hljs-string">&#x27;width: 100%&#x27;</span>,<br>        <span class="hljs-attr">options</span>: [<br>            &#123;<br>                <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;HIVE&#x27;</span>,<br>                <span class="hljs-attr">value</span>: <span class="hljs-number">0</span><br>            &#125;,<br>            &#123;<br>                <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;SQL&#x27;</span>,<br>                <span class="hljs-attr">value</span>: <span class="hljs-number">1</span><br>            &#125;,<br>        ]<br>    &#125;,<br>    &#123;<br>        <span class="hljs-attr">searchSelect</span>: <span class="hljs-literal">true</span>,<br>        <span class="hljs-attr">label</span>: <span class="hljs-string">&#x27;数据库&#x27;</span>,<br>        <span class="hljs-attr">prop</span>: <span class="hljs-string">&#x27;hiveDatabase&#x27;</span>,<br>        <span class="hljs-attr">options</span>: [],<br>        <span class="hljs-attr">placeholder</span>: <span class="hljs-string">&#x27;请选择数据库&#x27;</span><br>    &#125;,<br>]<br></code></pre></td></tr></table></div></figure><br/><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-hagw8mlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-hagw8mlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">el-form</span> <span class="hljs-attr">:model</span>=<span class="hljs-string">&quot;ruleForm&quot;</span> <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;rules&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;ruleForm&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">el-form-item</span> <span class="hljs-attr">label</span>=<span class="hljs-string">&quot;项目名称&quot;</span> <span class="hljs-attr">prop</span>=<span class="hljs-string">&quot;name&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">el-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&quot;ruleForm.name&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;mini&quot;</span> <span class="hljs-attr">:placeholder</span>=<span class="hljs-string">&quot;isSharedProject==0 ? &#x27;请输入共享项目名称&#x27; : &#x27;请输入本地项目名称&#x27;&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">el-input</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">el-form-item</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">el-form</span>&gt;</span><br></code></pre></td></tr></table></div></figure><p>→</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-6t8kd0lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-6t8kd0lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">Form</span> <span class="hljs-attr">:formObj</span>=<span class="hljs-string">&quot;formObj&quot;</span> <span class="hljs-attr">:formData</span>=<span class="hljs-string">&quot;ruleForm&quot;</span> <span class="hljs-attr">:rules</span>=<span class="hljs-string">&quot;rules&quot;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;ruleForm&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">Form</span>&gt;</span><br></code></pre></td></tr></table></div></figure><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-nl8p59lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-nl8p59lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;&lt;/template&gt;<br>&lt;script&gt;<br>import Form from &#x27;@/components/common/Form&#x27;<br>    export default&#123;<br>        components:&#123;<br>            Form<br>        &#125;,<br>        data()&#123;<br>            return&#123;<br>                ruleForm: &#123;<br>                    name: &#x27;&#x27;,<br>                &#125;,<br>                rules:&#123;<br>                    name: [<br>                        &#123;<br>                            required: true,<br>                            message: &#x27;请输入项目名称&#x27;,<br>                            trigger: &#x27;blur&#x27;,<br>                        &#125;,<br>                    ],<br>                &#125;,<br>                formObj:[<br>                    &#123;<br>                        input: true,<br>                        label: &#x27;项目名称&#x27;,<br>                        prop: &#x27;name&#x27;,<br>                        placeholder: &quot;&quot;,<br>                        size: &quot;mini&quot;,<br>                        inputStyle: &quot;width: 100%&quot;<br>                    &#125;<br>                ]<br>            &#125;<br>        &#125;,<br>        methods: &#123;<br>            updatePlaceholder()&#123;<br>                this.formObj[0].placeholder=this.isSharedProject==0 ? &#x27;请输入共享项目名称&#x27; : &#x27;请输入本地项目名称&#x27;<br>            &#125;,<br>        &#125;<br>    &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></div></figure><br/><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-fnteqplo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-fnteqplo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">el-form</span> <span class="hljs-attr">:model</span>=<span class="hljs-string">&#x27;formData&#x27;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&#x27;mini&#x27;</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&#x27;formNode&#x27;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">el-form-item</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&#x27;item in formList&#x27;</span> <span class="hljs-attr">:key</span>=<span class="hljs-string">&#x27;item.key&#x27;</span> <span class="hljs-attr">:label</span>=<span class="hljs-string">&#x27;item.desc&#x27;</span> <span class="hljs-attr">:prop</span>=<span class="hljs-string">&#x27;item.key&#x27;</span> <span class="hljs-attr">:rules</span>=<span class="hljs-string">&#x27;item.rules&#x27;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">el-input</span> <span class="hljs-attr">v-model</span>=<span class="hljs-string">&#x27;formData[item.key]&#x27;</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&#x27;textarea&#x27;</span> <span class="hljs-attr">:placeholder</span>=<span class="hljs-string">&quot;`Type-$&#123;(item.type&#125;\nFormat -JSON`&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">el-input</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">el-form-item</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">el-form</span>&gt;</span><br></code></pre></td></tr></table></div></figure><p>→</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-wjn7nwlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-wjn7nwlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;Form :formObj=&quot;formObj&quot; :formData=&quot;formData&quot; :size=&quot;&#x27;mini&#x27;&quot; ref=&quot;formNode&quot;&gt;<br>&lt;/Form&gt;<br></code></pre></td></tr></table></div></figure><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-tzrgsjlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-tzrgsjlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;&lt;/template&gt;<br>&lt;script&gt;<br>import Form from &#x27;@/components/common/Form&#x27;<br>    export default&#123;<br>        components:&#123;<br>            Form<br>        &#125;,<br>        data()&#123;<br>            return&#123;<br>                formData,<br>                formList,<br>                formObj:[]<br>            &#125;<br>        &#125;,<br>        created()&#123;<br>            this.updateFormObj()<br>        &#125;,<br>        methods: &#123;<br>            updateFormObj()&#123;<br>                this.formObj=this.formList.map(item=&gt;&#123;<br>                    return&#123;<br>                        key: item.key,<br>                        label: item.desc,<br>                        prop: item.key,<br>                        rules: item.rules,<br>                        textarea: true,<br>                        prop: item.key,<br>                        placeholder: `Type-$&#123;(item.type&#125;\nFormat -JSON`<br>                    &#125;<br>                &#125;)<br>            &#125;,<br>        &#125;<br>    &#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></div></figure><h1 id="二-LLM"><a href="#二-LLM" class="headerlink" title="二.LLM"></a>二.LLM</h1><p class="note note-success" style="border-left: 4px solid #f0ad4e;padding: 10px 15px;color: #777;background-color: #fdf8ea;">Ctrl+,打开vscode的设置</p><h2 id="Vite"><a href="#Vite" class="headerlink" title="Vite"></a>Vite</h2><p>在 Vite 中，<mark>defineConfig</mark>是一个函数，用于定义和导出 Vite 的配置。它主要用于创建一个合法的配置对象，以供 Vite 使用。</p><p class="note note-success" style="border-left: 4px solid #42b983;padding: 10px 15px;color: #777;background-color: rgba(66, 185, 131, .1);">报错：找不到模块“path”或其相应的类型声明</p><img src="image-20231010094751290.png" alt="image-20231010094751290" style="zoom:43%;" /><p>因为path模块是node.js内置的功能，但是node.js本身并不支持typescript，所以直接在typescript项目里使用是不行的。</p><p>解决方法：安装<code>@types/node</code></p><figure class="highlight bash"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-pr4xq5lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-pr4xq5lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install @types/node --save-dev<br></code></pre></td></tr></table></div></figure><hr><p class="note note-success" style="border-left: 4px solid #42b983;padding: 10px 15px;color: #777;background-color: rgba(66, 185, 131, .1);">控制台警告：[Vue warn]: Failed to resolve component: router-linkIf this is a native custom element, make sure to exclude it from component resolution via compilerOptions.isCustomElement. at < App > </p><img src="image-20231010101246698.png" alt="image-20231010101246698" style="zoom:40%;" /><hr><p class="note note-success" style="border-left: 4px solid #42b983;padding: 10px 15px;color: #777;background-color: rgba(66, 185, 131, .1);">报错：找不到模块“@/views./home.vue'或其相应的类型声明</p><img src="image-20231010101705820.png" alt="image-20231010101705820" style="zoom:50%;" /><p>tsconfig.json文件中加入：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-v9s6qhlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-v9s6qhlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-string">&quot;baseUrl&quot;</span>: <span class="hljs-string">&quot;.&quot;</span>,<br><span class="hljs-string">&quot;paths&quot;</span>: &#123;<br>     <span class="hljs-string">&quot;@/*&quot;</span>: [<span class="hljs-string">&quot;./src/*&quot;</span>]<br>&#125;<br></code></pre></td></tr></table></div></figure><img src="image-20231010101345972.png" alt="image-20231010101345972" style="zoom:50%;" /><p>然后重启项目即可。</p><hr><p class="note note-success" style="border-left: 4px solid #42b983;padding: 10px 15px;color: #777;background-color: rgba(66, 185, 131, .1);">修改端口号 ，使用localhost访问</p><p>在vite.config.ts添加：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-2asclilo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-2asclilo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">server</span>: &#123;<br>    <span class="hljs-attr">port</span>: <span class="hljs-number">8080</span>,<span class="hljs-comment">//端口号</span><br>    <span class="hljs-attr">host</span>: <span class="hljs-literal">true</span>,<span class="hljs-comment">//ip地址 或 &#x27;0.0.0.0&#x27; 或 &quot;loaclhost&quot;</span><br>    <span class="hljs-attr">open</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">//启动后是否自动打开浏览器</span><br>    <span class="hljs-attr">https</span>: <span class="hljs-literal">false</span>, <span class="hljs-comment">// 是否开启 https</span><br>&#125;,<br></code></pre></td></tr></table></div></figure><img src="image-20231010103633427.png" alt="image-20231010103633427" style="zoom:50%;" /><p><code>&lt;router-view /&gt;</code>是用于呈现路由组件的占位符。当你使用 Vue Router 进行页面导航时，它会根据当前路由配置加载相应的组件，并将其渲染到 <code>&lt;router-view /&gt;</code> 中。</p><img src="image-20231010104903812.png" alt="image-20231010104903812" style="zoom:40%;" /><p class="note note-success" style="border-left: 4px solid #42b983;padding: 10px 15px;color: #777;background-color: rgba(66, 185, 131, .1);">报错：Preprocessor dependency "sass"not found</p><img src="image-20231011172319536.png" alt="image-20231011172319536" style="zoom:50%;" /><p>解决方法：npm install -D sass</p><hr><p><code>postcss-pxtorem</code>是postcss的一个插件，可以将对应的像素单位转换为rem。主要用于适应不同的分辨率的移动设备，从而实现响应式布局。在vite中可以直接对其进行配置，因为vite已经集成了postcss。</p><p>其中最重要的配置属性为：</p><ul><li>rootValue：根元素的值，即1rem对应的像素值大小。一般设置为设计稿尺寸&#x2F;10</li></ul><p>以及一些其他属性：</p><ul><li>propList：需要进行转换的css属性的值，可以使用通配符。如：<code>*</code>意思是将全部属性单位都进行转换；<code>[&quot;*position*&quot;]</code>会匹配到<code>background-position-y</code></li><li>selectorBlackList：不进行单位转换的选择器。如设置为字符串<code>body</code>，则所有含有body字符串的选择器都不会被该插件进行转换；若设置为<code>[/^body$/]</code>，则<code>body</code>会被匹配到而不是<code>.body</code></li><li>exclude：不需要进行单位转换的文件</li><li>mediaQuery：是否允许像素在媒体查询中进行转换</li></ul><figure class="highlight bash"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-8bmhpulo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-8bmhpulo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install postcss-pxtorem --save-dev<br>npm install amfe-flexible --save-dev<br></code></pre></td></tr></table></div></figure><p>在main.js中引入：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-dzz9qllo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-dzz9qllo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;amfe-flexible&#x27;</span><br></code></pre></td></tr></table></div></figure><p>在vite.config.js中配置postcss-pxtorem：</p><figure class="highlight ts"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-rciomblo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-rciomblo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-attr">css</span>: &#123;<br>    <span class="hljs-attr">postcss</span>: &#123;<br>        <span class="hljs-attr">plugins</span>: [<br>            <span class="hljs-title function_">postCssPxToRem</span>(&#123;<br>                <span class="hljs-attr">rootValue</span>: <span class="hljs-number">37.5</span>,<br>                <span class="hljs-attr">propList</span>: [<span class="hljs-string">&#x27;*&#x27;</span>],<br>                <span class="hljs-comment">//转换成rem后保留的小数点位数</span><br>                <span class="hljs-comment">// unitPrecision: 5,</span><br>                <span class="hljs-comment">//小于12px的样式不被替换成rem</span><br>                <span class="hljs-comment">// minPixelValue: 12,</span><br>                <span class="hljs-comment">//selectorBlackList: [&#x27;.qz-&#x27;],// 要忽略的选择器并保留为px。</span><br>                <span class="hljs-comment">//忽略一些文件，不进行转换，比如我想忽略 依赖的UI框架</span><br>                <span class="hljs-comment">// exclude: [&#x27;node_modules&#x27;]</span><br>            &#125;)<br>        ]<br>    &#125;<br></code></pre></td></tr></table></div></figure><img src="image-20231020143318360.png" alt="image-20231020143318360" style="zoom:50%;" /><img src="image-20231020143255549.png" alt="image-20231020143255549" style="zoom:50%;" /><p>行内样式的px不会转换成rem：</p><img src="image-20231023105224042.png" alt="image-20231023105224042" style="zoom:50%;" /><img src="image-20231023104657917.png" alt="image-20231023104657917" style="zoom:50%;" /><p>如果想让行内样式的px转换成rem：</p><ol><li><p>有很多公用的js函数，为了便于集中管理，可以在src下面新建一个utils文件夹统一管理：</p><figure class="highlight ts"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-oru9fxlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-oru9fxlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">export</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">px2rem</span>(<span class="hljs-params">px: <span class="hljs-built_in">string</span></span>) &#123;<br>    <span class="hljs-keyword">if</span> (<span class="hljs-regexp">/%/gi</span>.<span class="hljs-title function_">test</span>(px)) &#123;<span class="hljs-comment">// 有百分号%，特殊处理，表述pc是一个有百分号的数，比如：90%</span><br>        <span class="hljs-keyword">return</span> px<br>    &#125;<br>    <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">parseFloat</span>(px) / <span class="hljs-number">192</span> + <span class="hljs-string">&#x27;rem&#x27;</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></div></figure><img src="image-20231024111039721.png" alt="image-20231024111039721" style="zoom:50%;" /><p>在main.ts中注册全局方法$px2rem：</p><img src="image-20231024110931821.png" alt="image-20231024110931821" style="zoom:50%;" /><p>在vue中使用：</p><img src="image-20231024112954917.png" alt="image-20231024112954917" style="zoom:50%;" /></li><li><p>不用全局注册，直接局部引用：</p><img src="image-20231024113151892.png" alt="image-20231024113151892" style="zoom:50%;" /></li></ol><hr><p>前端报错<code>Access to XMLHttpRequest at &#39; http ://10.114.49.20:8000/ private / knowledge / compl etion &#39; from origin &#39; http :// localhost :8085&#39; has been bloc ked by CORS policy : Respons e to preflight request doesn &#39; t pass access control check : No &#39; Access- Control-Allow-Origin &#39; header is present on the requested resource</code>：这个错误是由于浏览器的跨域安全策略（CORS）导致的。</p><p>CORS策略要求服务器在响应中添加特定的头部信息，以允许来自不同源（Origin）的请求访问资源。在你的错误信息中，报告了来自本地开发服务器（<code>http://localhost:8085</code>）对另一个域（<code>http://10.114.49.20:8000</code>）的请求被阻止了。</p><p>要解决这个问题，你可以尝试以下几种方法：</p><ol><li><p><strong>后端配置：</strong> 在 <code>http://10.114.49.20:8000</code> 的服务器端代码中，添加合适的响应头来允许跨域请求。具体而言，你需要在响应中添加 <code>Access-Control-Allow-Origin</code> 头，将其值设置为 <code>http://localhost:8085</code>。</p></li><li><p><strong>使用代理：</strong> 如果你在开发环境中使用的是 Vite 或类似的工具，你可以尝试配置开发服务器的代理，将请求转发到正确的地址。在 Vite 中，你可以通过修改 <code>vite.config.js</code> 文件来配置代理，如下所示：</p><figure class="highlight ts"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-t1ac9tlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-t1ac9tlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-attr">server</span>: &#123;<br>    <span class="hljs-attr">host</span>: <span class="hljs-string">&#x27;0.0.0.0&#x27;</span>,<span class="hljs-comment">//设置地址：http://localhost</span><br>    <span class="hljs-attr">port</span>: <span class="hljs-number">8083</span>, <span class="hljs-comment">// 设置服务启动端口号</span><br>    <span class="hljs-attr">open</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 设置服务启动时是否自动打开浏览器</span><br>    <span class="hljs-attr">cors</span>: <span class="hljs-literal">true</span>, <span class="hljs-comment">// 允许跨域</span><br>    <span class="hljs-attr">proxy</span>: &#123;<br>        <span class="hljs-string">&#x27;/api&#x27;</span>: &#123;<br>            <span class="hljs-attr">target</span>: env.<span class="hljs-property">VITE_APP_BASE_URL</span>,<span class="hljs-comment">//代理的地址</span><br>            <span class="hljs-attr">changeOrigin</span>: <span class="hljs-literal">true</span>,<br>            <span class="hljs-attr">rewrite</span>: <span class="hljs-function">(<span class="hljs-params">path</span>) =&gt;</span> path.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/^\/api/</span>, <span class="hljs-string">&#x27;&#x27;</span>)<span class="hljs-comment">//这里的/需要转义</span><br>        &#125;<br>    &#125;<br></code></pre></td></tr></table></div></figure><p>这样，所有以 <code>/private</code> 开头的请求将被代理到 <code>http://10.114.49.20:8000</code> 地址。</p></li><li><p><strong>修改前端开发服务器的地址：</strong> 如果你有权限更改后端服务器的配置，可以考虑将前端开发服务器的地址设置为与后端服务器相同的地址（例如 <code>http://10.114.49.20:8000</code>），这样就不存在跨域问题了。</p></li></ol><hr><p>使用环境变量，是基于不同环境实现不同逻辑的。比如，在生产环境和开发环境将BASE_URL设置成不同的值，用来请求不同的环境的接口。</p><p>Vite内置了<code>dotenv</code>这个第三方库， dotenv会自动读取.env文件， dotenv 从你的 环境目录 中的下列文件加载额外的环境变量：</p><ul><li>.env：所有情况下都会加载</li><li>.env.[mode]：只在指定模式下加载</li></ul><p>默认情况下，<code>npm run dev</code>会加载 .env 和 .env.development 内的配置，<code>npm run build</code>会加载 .env 和 .env.production 内的配置，mode 可以通过命令行 --mode 选项来重写。</p><p>加载的环境变量也会通过 import.meta.env 以字符串形式暴露给客户端源码。为了防止意外地将一些环境变量泄漏到客户端，只有以 VITE_ 为前缀的变量才会暴露给经过 vite 处理的代码。</p><hr><p>设置 Volar Takeover 模式 来支持 Vue 的 TS 语言服务：</p><ol><li>在当前项目的工作空间下，用 <code>Ctrl + Shift + P</code> (macOS：<code>Cmd + Shift + P</code>) 唤起命令面板。</li><li>输入 <code>built</code>，然后选择“Extensions：Show Built-in Extensions”。</li><li>在插件搜索框内输入 <code>typescript</code> (不要删除 <code>@builtin</code> 前缀)。</li><li>点击“TypeScript and JavaScript Language Features”右下角的小齿轮，然后选择“Disable (Workspace)”。</li><li>重新加载工作空间。Takeover 模式将会在你打开一个 Vue 或者 TS 文件时自动启用。</li></ol><p>增加 eslint 代码检查，新增依赖：</p><figure class="highlight bash"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-r4567elo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-r4567elo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm i -D eslint eslint-plugin-vue vue-eslint-parser @typescript-eslint/eslint-plugin @typescript-eslint/parser<br></code></pre></td></tr></table></div></figure><p>新增 eslint.cjs 文件：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-5u5etalo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-5u5etalo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = &#123;<br>  <span class="hljs-attr">root</span>: <span class="hljs-literal">true</span>,<br>  <span class="hljs-attr">parser</span>: <span class="hljs-string">&#x27;vue-eslint-parser&#x27;</span>,<br>  <span class="hljs-attr">parserOptions</span>: &#123;<br>    <span class="hljs-attr">parser</span>: <span class="hljs-string">&#x27;@typescript-eslint/parser&#x27;</span>,<br>    <span class="hljs-attr">ecmaVersion</span>: <span class="hljs-number">2020</span>,<br>    <span class="hljs-attr">sourceType</span>: <span class="hljs-string">&#x27;module&#x27;</span>,<br>    <span class="hljs-attr">jsxPragma</span>: <span class="hljs-string">&#x27;React&#x27;</span>,<br>    <span class="hljs-attr">ecmaFeatures</span>: &#123;<br>      <span class="hljs-attr">jsx</span>: <span class="hljs-literal">true</span>,<br>    &#125;,<br>  &#125;,<br>  <span class="hljs-attr">env</span>: &#123;<br>    <span class="hljs-attr">browser</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">node</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-attr">es2020</span>: <span class="hljs-literal">true</span>,<br>  &#125;,<br>  <span class="hljs-attr">extends</span>: [<span class="hljs-string">&#x27;eslint:recommended&#x27;</span>, <span class="hljs-string">&#x27;plugin:vue/vue3-recommended&#x27;</span>, <span class="hljs-string">&#x27;@vue/typescript/recommended&#x27;</span>],<br>  <span class="hljs-attr">rules</span>: &#123;<br>    <span class="hljs-string">&#x27;no-console&#x27;</span>: process.<span class="hljs-property">meta</span>.<span class="hljs-property">env</span>.<span class="hljs-property">MODE</span> === <span class="hljs-string">&#x27;production&#x27;</span> ? <span class="hljs-string">&#x27;warn&#x27;</span> : <span class="hljs-string">&#x27;off&#x27;</span>,<br>    <span class="hljs-string">&#x27;no-debugger&#x27;</span>: process.<span class="hljs-property">meta</span>.<span class="hljs-property">env</span>.<span class="hljs-property">MODE</span> === <span class="hljs-string">&#x27;production&#x27;</span> ? <span class="hljs-string">&#x27;warn&#x27;</span> : <span class="hljs-string">&#x27;off&#x27;</span>,<br>    <span class="hljs-string">&#x27;vue/require-default-prop&#x27;</span>: <span class="hljs-string">&#x27;off&#x27;</span>,<br>    <span class="hljs-string">&#x27;no-empty-function&#x27;</span>: <span class="hljs-string">&#x27;off&#x27;</span>,<br>    <span class="hljs-string">&#x27;@typescript-eslint/no-empty-function&#x27;</span>: <span class="hljs-string">&#x27;off&#x27;</span>,<br>    <span class="hljs-string">&#x27;@typescript-eslint/ban-ts-comment&#x27;</span>: <span class="hljs-string">&#x27;off&#x27;</span>,<br>    <span class="hljs-string">&#x27;vue/html-self-closing&#x27;</span>: [<span class="hljs-string">&#x27;off&#x27;</span>],<br>    <span class="hljs-string">&#x27;vue/singleline-html-element-content-newline&#x27;</span>: [<span class="hljs-string">&#x27;off&#x27;</span>],<br>    <span class="hljs-string">&#x27;vue/html-closing-bracket-newline&#x27;</span>: [<span class="hljs-string">&#x27;off&#x27;</span>],<br>    <span class="hljs-string">&#x27;vue/html-indent&#x27;</span>: <span class="hljs-string">&#x27;off&#x27;</span>,<br>    <span class="hljs-string">&#x27;@typescript-eslint/no-this-alias&#x27;</span>: <span class="hljs-string">&#x27;off&#x27;</span>,<br>  &#125;,<br>&#125;<br></code></pre></td></tr></table></div></figure><p>新增 .eslintignore：</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-yw3c2vlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-yw3c2vlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs plain">*.sh<br>node_modules<br>*.md<br>*.woff<br>*.ttf<br>.vscode<br>.idea<br>dist<br>/public<br>/docs<br>.husky<br>/bin<br></code></pre></td></tr></table></div></figure><p>在项目中新增 prettier 进行代码格式化，新增依赖：prettier eslint-config-prettier 主要用来解决和 eslint 的冲突。</p><figure class="highlight bash"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-zt3zytlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-zt3zytlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm i -D prettier eslint-config-prettier<br></code></pre></td></tr></table></div></figure><p>新增 .prettierrc.json 文件</p><figure class="highlight json"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-z3ozrzlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-z3ozrzlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;printWidth&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">100</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;trailingComma&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;all&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;tabWidth&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">2</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;useTabs&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;semi&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">false</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;singleQuote&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;vueIndentScriptAndStyle&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;singleAttributePerLine&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></div></figure><p>新增 .prettierignore 文件：</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-v05koplo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-v05koplo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs plain">/dist/*<br>/node_modules/**<br>pnpm-lock.yaml<br>**/*.svg<br>**/*.sh<br>/public/*<br></code></pre></td></tr></table></div></figure><p>在设置中开启自动保存和格式化，在项目中的.vscode 文件夹内新增 settings.json 文件：</p><figure class="highlight json"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-ygi4fxlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-ygi4fxlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;editor.codeActionsOnSave&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-punctuation">&#123;</span><br>    <span class="hljs-attr">&quot;source.fixAll.eslint&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><br>  <span class="hljs-punctuation">&#125;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;editor.defaultFormatter&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;esbenp.prettier-vscode&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;editor.formatOnSave&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-literal"><span class="hljs-keyword">true</span></span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></div></figure><p>重启vscode生效。</p><hr><h2 id="路由"><a href="#路由" class="headerlink" title="路由"></a>路由</h2><p>安装：</p><figure class="highlight bash"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-3cfbh8lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-3cfbh8lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install vue-router -S<br></code></pre></td></tr></table></div></figure><p>src文件夹下创建 router 文件夹，创建 index.ts 文件：</p><figure class="highlight typescript"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-tw6s4ylo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-tw6s4ylo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">import</span> &#123; createRouter, createWebHistory, <span class="hljs-title class_">RouteRecordRaw</span> &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-router&#x27;</span><br><br><span class="hljs-keyword">const</span> <span class="hljs-attr">routes</span>: <span class="hljs-title class_">Array</span>&lt;<span class="hljs-title class_">RouteRecordRaw</span>&gt; = [<br>  &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/&#x27;</span>,<br>    <span class="hljs-attr">redirect</span>: <span class="hljs-string">&#x27;/auditAnswer/navigation&#x27;</span>,<span class="hljs-comment">/* 重定向 */</span><br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/auditAnswer&#x27;</span>,<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;auditAnswer&#x27;</span>,<br>    <span class="hljs-comment">/* alias: [&#x27;/home&#x27;,&#x27;/home2&#x27;],   //别名 */</span><br>    <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&#x27;@/views/layout/home/index.vue&#x27;</span>),<br>    <span class="hljs-attr">children</span>: [<br>      &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;navigation&#x27;</span>,<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;navigation&#x27;</span>,<br>        <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&#x27;@/views/layout/home/desc.vue&#x27;</span>) <br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;chat&#x27;</span>,<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;chat&#x27;</span>,<br>        <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&#x27;@/views/layout/home/chat/index.vue&#x27;</span>) <br>      &#125;<br>    ]<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/auditSQL&#x27;</span>,<br>    <span class="hljs-attr">redirect</span>: <span class="hljs-string">&#x27;/auditSQL/navigation&#x27;</span>,<br>  &#125;,<br>  &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/auditSQL&#x27;</span>,<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;auditSQL&#x27;</span>,<br>  &#125;,<br>    <span class="hljs-attr">children</span>: [<br>      &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;navigation&#x27;</span>,<br>        <span class="hljs-comment">/* 不能和/auditAnswer/navigation的name重复 */</span><br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;navigation2&#x27;</span>,<span class="hljs-comment">/* name: &#x27;navigation&#x27;不对 */</span><br>        <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&#x27;@/views/layout/sql/sqldesc.vue&#x27;</span>) <br>      &#125;,<br>      &#123;<br>        <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;sql&#x27;</span>,<br>        <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;sql&#x27;</span>,<br>        <span class="hljs-attr">component</span>: <span class="hljs-function">() =&gt;</span> <span class="hljs-keyword">import</span>(<span class="hljs-string">&#x27;@/views/layout/sql/index.vue&#x27;</span>) <br>      &#125;<br>    ]<br>  &#125;,<br>]<br><span class="hljs-comment">/* 创建路由实例 */</span><br><span class="hljs-keyword">const</span> router = <span class="hljs-title function_">createRouter</span>(&#123;<br>  <span class="hljs-attr">history</span>: <span class="hljs-title function_">createWebHistory</span>(),<br>  routes<br>&#125;)<br><br><span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> router<br></code></pre></td></tr></table></div></figure><p>在 main.ts 中引入并注册：</p><figure class="highlight ts"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-7ubu2ulo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-7ubu2ulo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; creatApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./App.vue&#x27;</span><br><span class="hljs-keyword">import</span> router <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./router/index&#x27;</span><br><span class="hljs-keyword">import</span> store <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./store/index&#x27;</span><br><span class="hljs-keyword">const</span> app=<span class="hljs-title function_">creatApp</span>(<span class="hljs-title class_">App</span>)<br>app.<span class="hljs-title function_">use</span>(router).<span class="hljs-title function_">use</span>(store)<br></code></pre></td></tr></table></div></figure><p>跳转404页面：在src文件夹下的views文件夹创建NotFound文件夹，创建index.vue。</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-z5d2frlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-z5d2frlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;script setup lang=&quot;ts&quot;&gt;<br>    <br>&lt;/script&gt;<br><br>&lt;template&gt;<br>&lt;p&gt;<br>        404<br>    &lt;/p&gt;<br>&lt;h5&gt;<br>        您访问的页面不存在<br>    &lt;/h5&gt;<br>&lt;/template&gt;<br><br>&lt;style lang=&quot;scss&quot; scoped&gt;<br><br>&lt;/style&gt;<br></code></pre></td></tr></table></div></figure><p>scr&#x2F;router&#x2F;index.ts：</p><figure class="highlight ts"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-ofezqulo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-ofezqulo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> <span class="hljs-title class_">NotFound</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;@/view/NotFound/404.vue&#x27;</span><br><span class="hljs-keyword">const</span> <span class="hljs-attr">routes</span>: <span class="hljs-title class_">Array</span>&lt;<span class="hljs-title class_">RouteRecordRaw</span>&gt; = [<br>  &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/:pathMatch(.*)&#x27;</span>,<span class="hljs-comment">/*pathMatch(.*)*表示匹配所有路径*/</span><br>    <span class="hljs-attr">redirect</span>: <span class="hljs-string">&#x27;/404&#x27;</span>,<br>  &#125;,<br>    &#123;<br>    <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/404&#x27;</span>,<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;404&#x27;</span>,<br>    <span class="hljs-attr">component</span>: <span class="hljs-title class_">NotFound</span><br>  &#125;,<br>]<br></code></pre></td></tr></table></div></figure><p>使用一个自定义组件 <code>router-link</code> 来创建链接。这使得 Vue Router 可以在不重新加载页面的情况下更改 URL，处理 URL 的生成以及编码：</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-pwvw0dlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-pwvw0dlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://unpkg.com/vue@3&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://unpkg.com/vue-router@4&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;app&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Hello App!<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-comment">&lt;!--使用 router-link 组件进行导航 --&gt;</span><br>    <span class="hljs-comment">&lt;!--通过传递 `to` 来指定链接 --&gt;</span><br>    <span class="hljs-comment">&lt;!--`&lt;router-link&gt;` 将呈现一个带有正确 `href` 属性的 `&lt;a&gt;` 标签--&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/&quot;</span>&gt;</span>Go to Home<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">router-link</span> <span class="hljs-attr">to</span>=<span class="hljs-string">&quot;/about&quot;</span>&gt;</span>Go to About<span class="hljs-tag">&lt;/<span class="hljs-name">router-link</span>&gt;</span><br>  <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>  <span class="hljs-comment">&lt;!-- 路由出口 --&gt;</span><br>  <span class="hljs-comment">&lt;!-- 路由匹配到的组件将渲染在这里 --&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">router-view</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">router-view</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></div></figure><p><code>router-view</code> 将显示与 url 对应的组件。你可以把它放在任何地方，以适应你的布局。</p><p>因为我们在 <code>setup</code> 里面没有访问 <code>this</code>，所以我们不能再直接访问 <code>this.$router</code> 或 <code>this.$route</code>。作为替代，我们使用 <code>useRouter</code> 和 <code>useRoute</code> 函数。</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-dvflq9lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-dvflq9lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;script lang=&quot;ts&quot; setup&gt;<br>import &#123; useRoute &#125; from &#x27;vue-router&#x27;<br>import router from &#x27;@/router&#x27;<br>const $route=useRoute()<br>    <br>onMounted(()=&gt;&#123;<br>    if($route.name===&#x27;auditSQL&#x27;)&#123;<br>        localStorage.setItem(&#x27;sqlArray&#x27;,JSON.stringify([]))<br>        homeStore.clearSqlArr()<br>    &#125;<br>//上一个页面<br>    if(router.options.history.state.back===&#x27;/auditSQL/navigation&#x27;)&#123;&#125;<br>&#125;)<br>&lt;/script&gt;<br></code></pre></td></tr></table></div></figure><p>将给定匹配模式的路由映射到同一个组件。例如，我们可能有一个 <code>User</code> 组件，它应该对所有用户进行渲染，但用户 ID 不同。在 Vue Router 中，我们可以在路径中使用一个动态字段来实现，我们称之为路径参数 ：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-wy08uvlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-wy08uvlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> <span class="hljs-title class_">User</span> = &#123;<br>  <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;&lt;div&gt;User&lt;/div&gt;&#x27;</span>,<br>&#125;<br><br><span class="hljs-comment">// 这些都会传递给 `createRouter`</span><br><span class="hljs-keyword">const</span> routes = [<br>  <span class="hljs-comment">// 动态字段以冒号开始</span><br>  &#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/users/:id&#x27;</span>, <span class="hljs-attr">component</span>: <span class="hljs-title class_">User</span> &#125;,<br>]<br></code></pre></td></tr></table></div></figure><p>现在像 <code>/users/johnny</code> 和 <code>/users/jolyne</code> 这样的 URL 都会映射到同一个路由。</p><p>&#x3D;&#x3D;路径参数用冒号 <code>:</code> 表示&#x3D;&#x3D;。当一个路由被匹配时，它的params的值将在每个组件中以 <code>this.$route.params</code> 的形式暴露出来。因此，我们可以通过更新 <code>User</code> 的模板来呈现当前的用户 ID：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-vkojlnlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-vkojlnlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> <span class="hljs-title class_">User</span> = &#123;<br>  <span class="hljs-attr">template</span>: <span class="hljs-string">&#x27;&lt;div&gt;User &#123;&#123; $route.params.id &#125;&#125;&lt;/div&gt;&#x27;</span>,<br>&#125;<br></code></pre></td></tr></table></div></figure><p class="note note-success" style="border-left: 4px solid #42b983;padding: 10px 15px;color: #777;background-color: rgba(66, 185, 131, .1);">编程式导航</p><p>想要导航到不同的 URL，可以使用 <code>router.push</code> 方法。这个方法会向 history 栈添加一个新的记录，所以，当用户点击浏览器后退按钮时，会回到之前的 URL。</p><p>当你点击 <code>&lt;router-link&gt;</code> 时，内部会调用这个方法，所以点击 <code>&lt;router-link :to=&quot;...&quot;&gt;</code> 相当于调用 <code>router.push(...)</code> ：</p><table><thead><tr><th align="left">声明式</th><th align="left">编程式</th></tr></thead><tbody><tr><td align="left"><code>&lt;router-link :to=&quot;...&quot;&gt;</code></td><td align="left"><code>router.push(...)</code></td></tr></tbody></table><p>该方法的参数可以是一个字符串路径，或者一个描述地址的对象。例如：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-7k95t7lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-7k95t7lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/* 字符串路径 */</span><br>router.<span class="hljs-title function_">push</span>(<span class="hljs-string">&#x27;/users/eduardo&#x27;</span>)<br><br><span class="hljs-comment">/* 带有路径的对象 */</span><br>router.<span class="hljs-title function_">push</span>(&#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/users/eduardo&#x27;</span> &#125;)<br><br><span class="hljs-comment">/* 命名的路由，并加上参数，让路由建立 url */</span><br>router.<span class="hljs-title function_">push</span>(&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;user&#x27;</span>, <span class="hljs-attr">params</span>: &#123; <span class="hljs-attr">username</span>: <span class="hljs-string">&#x27;eduardo&#x27;</span> &#125; &#125;)<br><br><span class="hljs-comment">/* 带查询参数，结果是 /register?plan=private */</span><br>router.<span class="hljs-title function_">push</span>(&#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/register&#x27;</span>, <span class="hljs-attr">query</span>: &#123; <span class="hljs-attr">plan</span>: <span class="hljs-string">&#x27;private&#x27;</span> &#125; &#125;)<br><br><span class="hljs-comment">/* 带 hash，结果是 /about#team */</span><br>router.<span class="hljs-title function_">push</span>(&#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/about&#x27;</span>, <span class="hljs-attr">hash</span>: <span class="hljs-string">&#x27;#team&#x27;</span> &#125;)<br></code></pre></td></tr></table></div></figure><p><strong>注意</strong>：如果提供了 <code>path</code>，<code>params</code> 会被忽略，上述例子中的 <code>query</code> 并不属于这种情况。取而代之的是下面例子的做法，你需要提供路由的 <code>name</code> 或手写完整的带有参数的 <code>path</code> ：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-20ia5olo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-20ia5olo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> username = <span class="hljs-string">&#x27;eduardo&#x27;</span><br><span class="hljs-comment">/* 我们可以手动建立 url，但我们必须自己处理编码 */</span><br>router.<span class="hljs-title function_">push</span>(<span class="hljs-string">`/user/<span class="hljs-subst">$&#123;username&#125;</span>`</span>) <br>router.<span class="hljs-title function_">push</span>(&#123; <span class="hljs-attr">path</span>: <span class="hljs-string">`/user/<span class="hljs-subst">$&#123;username&#125;</span>`</span> &#125;) <br><span class="hljs-comment">/* 如果可能的话，使用 `name` 和 `params` 从自动 URL 编码中获益 */</span><br>router.<span class="hljs-title function_">push</span>(&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;user&#x27;</span>, <span class="hljs-attr">params</span>: &#123; username &#125; &#125;) <br><br><span class="hljs-comment">/* `params` 不能与 `path` 一起使用 */</span><br>router.<span class="hljs-title function_">push</span>(&#123; <span class="hljs-attr">path</span>: <span class="hljs-string">&#x27;/user&#x27;</span>, <span class="hljs-attr">params</span>: &#123; username &#125; &#125;)<br></code></pre></td></tr></table></div></figure><p>当指定 <code>params</code> 时，可提供 <code>string</code> 或 <code>number</code> 参数（或者对于可重复的参数可提供一个数组）。任何其他类型（如 <code>undefined</code>、<code>false</code> 等）都将被自动字符串化。对于可选参数，你可以提供一个空字符串（<code>&quot;&quot;</code>）来跳过它。</p><p>由于属性 <code>to</code> 与 <code>router.push</code> 接受的对象种类相同，所以两者的规则完全相同。</p><p><code>router.push</code> 和所有其他导航方法都会返回一个 <em>Promise</em>，让我们可以等到导航完成后才知道是成功还是失败。</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-3subuolo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-3subuolo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;&lt;/template&gt;<br>&lt;script setup lang=&quot;ts&quot;&gt;<br>    import &#123; onBeforeRouteLeave, onBeforeRouteUpdate &#125; from &#x27;vue-router&#x27;<br>    import &#123; ref &#125; from &#x27;vue&#x27;<br><br>    // 与 beforeRouteLeave 相同，无法访问 `this`<br>    onBeforeRouteLeave((to, from) =&gt; &#123;<br>        const answer = window.confirm(<br>            &#x27;Do you really want to leave? you have unsaved changes!&#x27;<br>        )<br>        // 取消导航并停留在同一页面上<br>        if (!answer) return false<br>    &#125;)<br><br>    const userData = ref()<br><br>    // 与 beforeRouteUpdate 相同，无法访问 `this`<br>    onBeforeRouteUpdate(async (to, from) =&gt; &#123;<br>        //仅当 id 更改时才获取用户，例如仅 query 或 hash 值已更改<br>        if (to.params.id !== from.params.id) &#123;<br>            userData.value = await fetchUser(to.params.id)<br>        &#125;<br>    &#125;)<br>&lt;/script&gt;<br></code></pre></td></tr></table></div></figure><hr><p>div设置圆角边框：</p><figure class="highlight css"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-aingczlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-aingczlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-tag">div</span> &#123;<br>  <span class="hljs-attribute">border</span>: <span class="hljs-number">1px</span> solid <span class="hljs-number">#000</span>; <span class="hljs-comment">/* 设置边框样式 */</span><br>  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">10px</span>; <span class="hljs-comment">/* 设置圆角半径 */</span><br>&#125;<br></code></pre></td></tr></table></div></figure><hr><p>设置水平垂直居中：</p><ol><li>使用 Flexbox：</li></ol><figure class="highlight css"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-48rkrjlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-48rkrjlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.container</span> &#123;<br>  <span class="hljs-attribute">display</span>: flex;<br>  <span class="hljs-attribute">justify-content</span>: center; <span class="hljs-comment">/* 水平居中 */</span><br>  <span class="hljs-attribute">align-items</span>: center; <span class="hljs-comment">/* 垂直居中 */</span><br>&#125;<br></code></pre></td></tr></table></div></figure><p>在上述代码中，父容器 <code>.container</code> 需要具有一定的高度和宽度，并且设置为 <code>display: flex;</code>。通过设置 <code>justify-content: center;</code> 和 <code>align-items: center;</code> 可以将子元素水平和垂直居中。</p><ol start="2"><li>使用绝对定位和 transform：将<code>container</code>设置为相对定位(<code>position: relative</code>)，然后将 <code>centered-element</code> 设置为绝对定位(<code>position: absolute</code>)，再设置 <code>centered-element</code> 的<code>top</code>和<code>left</code>即可相对于 <code>container</code> 的宽度进行计算。</li></ol><figure class="highlight css"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-nzfjwglo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-nzfjwglo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.container</span> &#123;<br>  <span class="hljs-attribute">position</span>: relative;<br>&#125;<br><br><span class="hljs-selector-class">.centered-element</span> &#123;<br>  <span class="hljs-attribute">position</span>: absolute;<br>  <span class="hljs-attribute">top</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">left</span>: <span class="hljs-number">50%</span>;<br>  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(-<span class="hljs-number">50%</span>, -<span class="hljs-number">50%</span>);<br>&#125;<br></code></pre></td></tr></table></div></figure><p>在上述代码中，父容器 <code>.container</code> 需要设置为 <code>position: relative;</code>，然后在要居中的子元素上添加 <code>.centered-element</code> 类。通过设置 <code>top: 50%;</code>、<code>left: 50%;</code> 和 <code>transform: translate(-50%, -50%);</code> 可以将子元素水平和垂直居中。</p><hr><p><code>&lt;el-col&gt;</code> 是 Element UI 库中的栅格布局组件，用于创建响应式的网格系统。通过使用 <code>:xs</code>、<code>:sm</code>、<code>:md</code>、<code>:lg</code> 和 <code>:xl</code> 这些属性，可以定义在不同屏幕尺寸下 <code>&lt;el-col&gt;</code> 元素所占据的列数。</p><p>对于你提供的代码 <code>&lt;el-col :xs=&quot;8&quot; :sm=&quot;6&quot; :md=&quot;4&quot; :lg=&quot;3&quot; :xl=&quot;1&quot;&gt;</code>，这表示在不同屏幕尺寸下，列元素 <code>&lt;el-col&gt;</code> 分别占据的列数。具体设置如下：</p><ul><li><code>:xs=&quot;8&quot;</code>：在超小屏幕设备（&lt;768px 宽度）下，该列元素占据 8 列的宽度。</li><li><code>:sm=&quot;6&quot;</code>：在小屏幕设备（≥768px 宽度）下，该列元素占据 6 列的宽度。</li><li><code>:md=&quot;4&quot;</code>：在中等屏幕设备（≥992px 宽度）下，该列元素占据 4 列的宽度。</li><li><code>:lg=&quot;3&quot;</code>：在大屏幕设备（≥1200px 宽度）下，该列元素占据 3 列的宽度。</li><li><code>:xl=&quot;1&quot;</code>：在超大屏幕设备（≥1920px 宽度）下，该列元素占据 1 列的宽度。</li></ul><p>这些属性值代表了 <code>&lt;el-col&gt;</code> 元素在不同屏幕尺寸下所占据的相对宽度比例。</p><hr><p>父组件中引用子组件：</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-iua9wolo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-iua9wolo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;script setup lang=&quot;ts&quot;&gt;<br>import ChildComponent from &#x27;./ChildComponent.vue&#x27;; // 导入子组件<br>&lt;/script&gt;<br><br>&lt;template&gt;<br>  &lt;div&gt;<br>    &lt;ChildComponent /&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></div></figure><hr><p>要实现上下两栏固定，中间栏自适应的布局：</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-a88tyelo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-a88tyelo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"></span><br><span class="language-css">  <span class="hljs-selector-class">.container</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">display</span>: flex;</span><br><span class="language-css">    <span class="hljs-attribute">flex-direction</span>: column;</span><br><span class="language-css">    <span class="hljs-attribute">height</span>: <span class="hljs-number">100vh</span>; <span class="hljs-comment">/* 设置容器高度为视窗高度 */</span></span><br><span class="language-css">  &#125;</span><br><span class="language-css"></span><br><span class="language-css">  <span class="hljs-selector-class">.header</span>,</span><br><span class="language-css">  <span class="hljs-selector-class">.footer</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">flex</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">50px</span>; <span class="hljs-comment">/* 固定高度为 50px */</span></span><br><span class="language-css">    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#ccc</span>;</span><br><span class="language-css">  &#125;</span><br><span class="language-css"></span><br><span class="language-css">  <span class="hljs-selector-class">.content</span> &#123;</span><br><span class="language-css">    <span class="hljs-attribute">flex</span>: <span class="hljs-number">1</span>; <span class="hljs-comment">/* 剩余空间自适应 */</span></span><br><span class="language-css">    <span class="hljs-attribute">background-color</span>: <span class="hljs-number">#f0f0f0</span>;</span><br><span class="language-css">  &#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;container&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;header&quot;</span>&gt;</span>上栏内容<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span>中栏内容<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;footer&quot;</span>&gt;</span>下栏内容<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></div></figure><p><code>.container</code> 是一个具有 Flex 布局的容器，它的 <code>flex-direction</code> 属性被设置为 <code>column</code>，使子元素按垂直方向排列。</p><p><code>.header</code> 和 <code>.footer</code> 类分别表示上栏和下栏，它们都设置了固定的高度（这里为 50px），通过 <code>flex: 0 0 50px</code> 指定不可伸缩、初始大小为 50px。</p><p><code>.content</code> 类表示中栏，它的 <code>flex</code> 属性被设置为 <code>1</code>，表示它会占据剩余的所有空间，从而实现自适应的效果。</p><hr><p>要修改 <code>&lt;el-input&gt;</code> 组件的 placeholder 字体大小，你可以使用 CSS 来覆盖默认样式。下面是一种常用的方法：</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-thjcavlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-thjcavlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;el-input class=&quot;input&quot; placeholder=&quot;请输入内容&quot;&gt;&lt;/el-input&gt;<br>&lt;/template&gt;<br><br>&lt;style lang=&quot;scss&quot; scoped&gt;<br>.input&#123;<br>    :deep .el-input__inner &#123;<br>        font-size: 14px; /* 设置占位符字体大小 */<br>    &#125;<br>    :deep .el-input__wrapper &#123;<br>        border-radius: 14px !important; /* 设置输入框圆角边框 */<br>    &#125;<br>&#125; <br>&lt;/style&gt;<br></code></pre></td></tr></table></div></figure><hr><p>要在 <code>&lt;el-input&gt;</code> 输入框内的右侧放置一个图片，你可以使用输入框的附加内容（<code>append</code>）来实现。</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-rlcwhqlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-rlcwhqlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;el-input placeholder=&quot;请输入内容&quot;&gt;<br>    &lt;template #suffix&gt;<br>      &lt;img src=&quot;your-image-url&quot; alt=&quot;图片&quot;&gt;<br>    &lt;/template&gt;<br>  &lt;/el-input&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></div></figure><hr><p>div里包裹三个p设置div为flex布局，前两个p在一排，第三个p在第二排：如果你想在 <code>&lt;div&gt;</code> 中包裹三个 <code>&lt;p&gt;</code> 元素，并设置前两个 <code>&lt;p&gt;</code> 元素在一行显示，第三个 <code>&lt;p&gt;</code> 元素在第二行，可以通过使用 CSS 的 Flex 布局来实现。</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-mwkn1nlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-mwkn1nlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div class=&quot;container&quot;&gt;<br>    &lt;p&gt;第一个段落&lt;/p&gt;<br>    &lt;p&gt;第二个段落&lt;/p&gt;<br>    &lt;p&gt;第三个段落&lt;/p&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;style scoped&gt;<br>.container &#123;<br>  display: flex;<br>  flex-wrap: wrap;<br>&#125;<br><br>.container p &#123;<br>  width: 50%; /* 每个段落占据容器的一半宽度 */<br>&#125;<br><br>.container p:nth-child(3) &#123;<br>  width: 100%; /* 第三个段落占据整个容器宽度 */<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></div></figure><p>通过将 <code>.container</code> 类的 <code>display</code> 属性设置为 <code>flex</code>，并设置 <code>flex-wrap</code> 属性为 <code>wrap</code>，可以让容器内的元素自动换行。</p><p>然后，我们给每个 <code>&lt;p&gt;</code> 元素设置了宽度。在示例中，前两个 <code>&lt;p&gt;</code> 元素的宽度被设置为容器宽度的一半（50%），而第三个 <code>&lt;p&gt;</code> 元素的宽度被设置为整个容器的宽度（100%）。</p><p>这样，前两个 <code>&lt;p&gt;</code> 元素会在一行显示，而第三个 <code>&lt;p&gt;</code> 元素会独占一行。</p><hr><p>设置文本折行：</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-s3savrlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-s3savrlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div class=&quot;text-wrapper&quot;&gt;<br>    &#123;&#123; longText &#125;&#125;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;style&gt;<br>.text-wrapper &#123;<br>  word-wrap: break-word; /* 当单词过长时自动换行 */<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></div></figure><p>使用了 <code>word-wrap: break-word</code> 样式来实现单词过长时自动换行。</p><hr><p>在父组件内容被撑大出现滚动条时，如何让子组件始终固定在父组件的右下角：父组件div设置<code>position:relative;</code>，子组件div设置<code>position:absolute;bottom:40px;right:0;</code>。</p><hr><p>点击上箭头按钮返回页面顶部：</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-4tcondlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-4tcondlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;script setup lang=&quot;ts&quot;&gt;<br>    const scrollToTop=()=&gt;&#123;<br>        if(container.value)&#123;<br>            container.value.scrollTo(&#123;<br>                top: 0,<br>                behavior: &#x27;smooth&#x27;,<br>            &#125;)<br>    &#125;<br>    &#125;<br>&lt;/script&gt;<br><br>&lt;template&gt;<br>    &lt;div ref=&quot;container&quot;&gt;<br>        &lt;ChatTool/&gt;<br>    &lt;/div&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></div></figure><hr><p>将元素 <code>a</code> 的滚动位置设置为它的内容的高度：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-bba42qlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-bba42qlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js">a.<span class="hljs-property">scrollTop</span>=a.<span class="hljs-property">scrollHeight</span><br></code></pre></td></tr></table></div></figure><hr><p>要设置不同el-tree层级的图标不同，你可以通过判断节点的层级来动态地为每个层级设置不同的图标。</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-pmrplblo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-pmrplblo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;el-tree :data=&quot;treeData&quot;&gt;<br>    &lt;template v-slot=&quot;&#123; node, data &#125;&quot;&gt;<br>      &lt;span class=&quot;tree-node-icon&quot;&gt;<br>        &lt;i :class=&quot;getIconClass(node.level)&quot;&gt;&lt;/i&gt;<br>      &lt;/span&gt;<br>      &lt;span&gt;&#123;&#123; node.label &#125;&#125;&lt;/span&gt;<br>    &lt;/template&gt;<br>  &lt;/el-tree&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import &#123; ref &#125; from &#x27;vue&#x27;;<br><br>const treeData = ref([]);<br><br>const getIconClass = (level: number): string =&gt; &#123;<br>  if (level === 1) &#123;<br>    return &#x27;iconfont icon-level1&#x27;;<br>  &#125; else if (level === 2) &#123;<br>    return &#x27;iconfont icon-level2&#x27;;<br>  &#125; else &#123;<br>    return &#x27;iconfont icon-default&#x27;;<br>  &#125;<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></div></figure><p>要在树形结构的各个层级之间添加间隙，你可以使用 CSS 的 <code>margin</code> 属性来实现。</p><figure class="highlight css"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-h980kxlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-h980kxlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs css">:deep .el-tree&#123;<br>    <span class="hljs-selector-class">.el-tree-node__children</span>&#123;<br>        <span class="hljs-selector-class">.el-tree-node__content</span>&#123;<br>            <span class="hljs-attribute">margin-top</span>:<span class="hljs-number">10px</span>;<br>        &#125;<br>        .<span class="hljs-selector-class">.el-tree-node__children</span>&#123;<br>            <span class="hljs-attribute">padding-left</span>:<span class="hljs-number">10px</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></div></figure><hr><p>要设置每个 <code>el-table-column</code> 的宽度占比，你可以使用 <code>width</code> 属性配合百分比来实现。</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-eza7telo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-eza7telo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;el-table :data=&quot;tableData&quot; style=&quot;width: 100%&quot;&gt;<br>    &lt;el-table-column<br>      prop=&quot;name&quot;<br>      label=&quot;姓名&quot;<br>      min-width=&quot;20%&quot;<br>    &gt;&lt;/el-table-column&gt;<br>    &lt;el-table-column<br>      prop=&quot;age&quot;<br>      label=&quot;年龄&quot;<br>      min-width=&quot;10%&quot;<br>    &gt;&lt;/el-table-column&gt;<br>    &lt;el-table-column<br>      prop=&quot;gender&quot;<br>      label=&quot;性别&quot;<br>      min-width=&quot;15%&quot;<br>    &gt;&lt;/el-table-column&gt;<br>  &lt;/el-table&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></div></figure><p>设置el-table滚动：</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-gdjjtvlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-gdjjtvlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">el-table</span> <span class="hljs-attr">:data</span>=<span class="hljs-string">&quot;tableData&quot;</span> <span class="hljs-attr">max-height</span>=<span class="hljs-string">&quot;200&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">el-table</span>&gt;</span><br></code></pre></td></tr></table></div></figure><hr><p>设置el-table-column的字体颜色：</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-s2gwlolo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-s2gwlolo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;el-table :data=&quot;tableData&quot;  :header-cell-style=&quot;&#123; color: &#x27;red&#x27; &#125;&quot; :cell-style=&quot;rowCellStyle&quot;&gt;<br>    &lt;el-table-column prop=&quot;name&quot; label=&quot;姓名&quot;&gt;<br>    &lt;/el-table-column&gt;<br>    &lt;el-table-column prop=&quot;age&quot; label=&quot;年龄&quot;&gt;<br>    &lt;/el-table-column&gt;<br>  &lt;/el-table&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import &#123; ref &#125; from &#x27;vue&#x27;;<br><br>const tableData = ref([<br>  &#123; name: &#x27;张三&#x27;, age: 20 &#125;,<br>  &#123; name: &#x27;李四&#x27;, age: 25 &#125;<br>]);<br><br>const rowCellStyle = (&#123; row, column &#125;: &#123; row: any, column: any &#125;) =&gt; &#123;<br>  if (column.property === &#x27;name&#x27;) &#123;<br>    return &#123; color: &#x27;green&#x27; &#125;;<br>  &#125;<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></div></figure><hr><p class="note note-success" style="border-left: 4px solid #42b983;padding: 10px 15px;color: #777;background-color: rgba(66, 185, 131, .1);">父组件向子组件传值</p><p>父组件：</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-yw36pwlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-yw36pwlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>&lt;div&gt;<br>        &lt;Metainfo :parentMessage=&quot;parentMessage&quot;&gt;&lt;/Metainfo&gt;<br>    &lt;/div&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></div></figure><p>子组件：</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-wpj7lolo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-wpj7lolo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div&gt;&#123;&#123; message &#125;&#125;&lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br><br>const props = defineProps(&#123;<br>  parentMessage: &#123;<br>    type: String,<br>    required: true<br>  &#125;<br>&#125;);<br><br>const &#123;parentMessage&#125; = toRefs(props);<br>&lt;/script&gt;<br></code></pre></td></tr></table></div></figure><p class="note note-success" style="border-left: 4px solid #42b983;padding: 10px 15px;color: #777;background-color: rgba(66, 185, 131, .1);">子组件向父组件传值</p><p>子组件：</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-bezjlplo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-bezjlplo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;button @click=&quot;sendValueToParent&quot;&gt;点击发送值给父组件&lt;/button&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br>const $emit = defineEmits([&#x27;changeValue&#x27;,&#x27;value2&#x27;]);<br><br>const sendValueToParent = () =&gt; &#123;<br>  const value = &#x27;这是子组件传递给父组件的值&#x27;;<br>  $emits(&#x27;changeValue&#x27;, true);<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></div></figure><p>父组件：</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-06u8cblo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-06u8cblo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div&gt;<br>    &lt;ChildComponent @changeValue=&quot;changeValue&quot; /&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import &#123; ref &#125; from &#x27;vue&#x27;;<br><br>const receivedValue = ref(&#x27;&#x27;);<br>const changeValue = (value: string) =&gt; &#123;<br>  receivedValue.value = value;<br>&#125;;<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></div></figure><p class="note note-success" style="border-left: 4px solid #42b983;padding: 10px 15px;color: #777;background-color: rgba(66, 185, 131, .1);">【暂时未生效】provide inject传值</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-rjce6wlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-rjce6wlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;!-- 模板内容 --&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import &#123; provide &#125; from &#x27;vue&#x27;;<br><br>const setup = () =&gt; &#123;<br>  const valueToProvide: string = &#x27;这是要传递的值&#x27;;<br>  provide(&#x27;myValue&#x27;, valueToProvide);<br>&#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></div></figure><p>接收方组件：</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-62e4eulo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-62e4eulo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;!-- 模板内容 --&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import &#123; inject &#125; from &#x27;vue&#x27;;<br><br>const receivedValue: string = inject(&#x27;myValue&#x27;);<br><br>console.log(receivedValue); // 输出：这是要传递的值<br>&lt;/script&gt;<br></code></pre></td></tr></table></div></figure><hr><p>鼠标悬浮到el-table的某行后在该行的第一列显示出加号：</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-d6fftslo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-d6fftslo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div&gt;<br>    &lt;el-table :data=&quot;tableData&quot; @cell-mouse-enter=&quot;cellMouseEnter&quot; @cell-mouse-leave=&quot;cellMouseLeave&quot;&gt;<br>      &lt;!-- 第一列使用作用域插槽自定义内容 --&gt;<br>      &lt;el-table-column label=&quot;加号&quot;&gt;<br>        &lt;template #default=&quot;&#123; row &#125;&quot;&gt;<br>          &lt;span v-if=&quot;row.showAddIcon&quot;&gt;+&lt;/span&gt;<br>        &lt;/template&gt;<br>      &lt;/el-table-column&gt;<br>    &lt;/el-table&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import &#123; reactive &#125; from &#x27;vue&#x27;;<br><br>interface TableRow &#123;<br>  name: string;<br>  age: number;<br>  gender: string;<br>  showAddIcon?: boolean;<br>&#125;<br><br>const tableData: TableRow[] = reactive([<br>  &#123; name: &#x27;张三&#x27;, age: 20, gender: &#x27;男&#x27;, showAddIcon: false &#125;,<br>  &#123; name: &#x27;李四&#x27;, age: 25, gender: &#x27;女&#x27;, showAddIcon: false &#125;,<br>  &#123; name: &#x27;王五&#x27;, age: 30, gender: &#x27;男&#x27;, showAddIcon: false &#125;<br>]);<br>    <br>const cellMouseEnter=(row:number)=&gt;&#123;<br>    row.showAddIcon=true<br>&#125;<br>const cellMouseLeave=(row:number)=&gt;&#123;<br>    row.showAddIcon=false<br>&#125;<br>&lt;/script&gt;<br></code></pre></td></tr></table></div></figure><hr><p>要在 <code>el-table</code> 的最后一行中插入一个 <code>el-select</code>：</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-hqal0olo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-hqal0olo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div&gt;<br>    &lt;el-table :data=&quot;tableData&quot;&gt;<br>        &lt;el-table-column label=&quot;表名&quot;&gt;<br>            &lt;template #default=&quot;&#123; row &#125;&quot;&gt;<br>                &lt;template v-if=&quot;row.showAddIcon===true&quot;&gt;<br>                    &lt;el-select v-model=&quot;select&quot; placeholder=&quot;请选择&quot; @change=&quot;(val:any)=&gt;selectChange(val,row)&quot;&gt;<br>                        &lt;el-option v-for=&quot;i in options&quot; :key=&quot;i.value&quot; :label=&quot;i.label&quot; :value=&quot;i.value&quot;&gt;<br>                        &lt;/el-option&gt;<br>                    &lt;/el-select&gt;<br>                &lt;/template&gt;<br>                &lt;template v-else&gt;<br>                    &#123;&#123;row.name&#125;&#125;<br>                &lt;/template&gt;<br>            &lt;/template&gt;<br>        &lt;/el-table-column&gt;<br>        &lt;el-table-column label=&quot;操作&quot;&gt;<br>            &lt;template #default=&quot;scope&quot;&gt;<br>        &lt;svg-icon iconName=&quot;icon-a-shanchu1&quot; @click=&quot;handleDelete(scope.row,scope.$index)&quot;&gt;&lt;/svg-icon&gt;<br>            &lt;/template&gt;<br>        &lt;/el-table-column&gt;<br>&lt;/el-table&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br></code></pre></td></tr></table></div></figure><p>有时需要用到&#96;&#96;v-for&#x3D;&quot;(i,index) in options&quot;&#96;获取元素下标。</p><hr><p>自定义el-button禁用时的click事件：</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-sertljlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-sertljlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div&gt;<br>    &lt;el-button :disabled=&quot;isDisabled&quot; @click=&quot;handleClick&quot;&gt;Click me&lt;/el-button&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script setup&gt;<br>import &#123; ref &#125; from &#x27;vue&#x27;;<br><br>const isDisabled = ref(true); <br><br>const handleClick = () =&gt; &#123;<br>  if (!isDisabled.value) &#123;<br>    console.log(&#x27;Button clicked!&#x27;);<br>  &#125;<br>&#125;;<br><br>&lt;/script&gt;<br></code></pre></td></tr></table></div></figure><hr><p><code>trim()</code> 是  字符串的内置函数，用于删除字符串的首尾空格：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-n31yzllo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-n31yzllo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> str = <span class="hljs-string">&#x27;  Hello, World!  &#x27;</span>;<br><span class="hljs-keyword">const</span> trimmedStr = str.<span class="hljs-title function_">trim</span>();<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(trimmedStr); <span class="hljs-comment">// 输出: &quot;Hello, World!&quot;</span><br></code></pre></td></tr></table></div></figure><hr><p>Proxy对象的[[TARGET]]:Array(4)，怎么获取到这个数组：<code>toRaw(tmp)</code></p><hr><p>随机生成id：可以使用 UUID（Universally Unique Identifier）或 GUID（Globally Unique Identifier）。这些是用于生成全局唯一标识符的算法。在  中，可以使用第三方库 <code>uuid</code> 来生成 UUID。</p><p>首先，确保你已经安装了 <code>uuid</code> 库。可以使用 npm 包管理器运行以下命令进行安装：</p><figure class="highlight bash"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-sq6yu4lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-sq6yu4lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install uuid<br></code></pre></td></tr></table></div></figure><p>安装完成后，可以使用以下代码生成一个完全不重复的随机 ID：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-ygflp6lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-ygflp6lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> &#123; <span class="hljs-attr">v4</span>: uuidv4 &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;uuid&#x27;</span>);<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">generateUniqueId</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">const</span> uniqueId = <span class="hljs-title function_">uuidv4</span>();<br>  <span class="hljs-keyword">return</span> uniqueId;<br>&#125;<br><br><span class="hljs-keyword">const</span> id = <span class="hljs-title function_">generateUniqueId</span>();<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(id);<br></code></pre></td></tr></table></div></figure><p>上述代码中，<code>uuid</code> 库的 <code>v4</code> 方法被引入并命名为 <code>uuidv4</code>。<code>generateUniqueId</code> 函数使用 <code>uuidv4</code> 方法来生成一个完全不重复的随机 ID。</p><p>每次调用 <code>generateUniqueId</code> 函数时，都会生成一个全局唯一的 ID。这是由 UUID 算法的特性决定的。</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-yhzom2lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-yhzom2lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123;useRouter&#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue-router&#x27;</span><br><span class="hljs-keyword">const</span> $router=<span class="hljs-title function_">useRouter</span>()<br><span class="hljs-keyword">const</span> <span class="hljs-title function_">handleClick</span>=(<span class="hljs-params">value:string</span>)=&gt;&#123;<br>$router.<span class="hljs-title function_">push</span>(&#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;chat&#x27;</span>,<span class="hljs-attr">query</span>:&#123;uuid,<span class="hljs-attr">question</span>:value&#125;&#125;)<br>&#125;<br></code></pre></td></tr></table></div></figure><p>即在url后添加chat?uuid&#x3D;111&amp;question&#x3D;你是谁?</p><hr><p>当你刷新页面时，页面的值消失的原因可能是因为数据没有被正确地保存或恢复。</p><p>在 Web 开发中，浏览器提供了 <code>localStorage</code> 和 <code>sessionStorage</code> 这两个 API 来存储数据。这些 API 允许你在页面之间保持持久的数据存储或会话级别的数据存储。</p><p>如果页面的值在刷新后消失，可能是因为你没有正确地使用这些存储机制。</p><ul><li><code>localStorage</code>：<code>localStorage</code> 是一个持久性存储，数据将在浏览器关闭后仍然保留。你可以使用 <code>localStorage.setItem(key, value)</code> 方法将值存储到 <code>localStorage</code> 中，并使用 <code>localStorage.getItem(key)</code> 方法检索值。</li><li><code>sessionStorage</code>：<code>sessionStorage</code> 是一个会话级别的存储，数据将在会话结束时被清除（当用户关闭标签页或浏览器窗口时）。你可以使用 <code>sessionStorage.setItem(key, value)</code> 方法将值存储到 <code>sessionStorage</code> 中，并使用 <code>sessionStorage.getItem(key)</code> 方法检索值。</li></ul><p>请确保在存储值时使用正确的 API，并在页面加载时从存储中恢复值。例如，在加载页面时，你可以在  中使用以下代码来恢复 <code>localStorage</code> 中的值：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-5ntbcolo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-5ntbcolo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> storedValue = <span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">getItem</span>(<span class="hljs-string">&#x27;myVariable&#x27;</span>);<br><span class="hljs-keyword">if</span> (storedValue) &#123;<br>&#125;<br></code></pre></td></tr></table></div></figure><p>这样，即使在刷新页面后，数据仍然可以从 <code>localStorage</code> 中获取并恢复。</p><p><code>JSON.stringify</code>：将JavaScript对象或值转换为JSON字符串。</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-zu4vnllo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-zu4vnllo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-variable language_">localStorage</span>.<span class="hljs-title function_">setItem</span>(<span class="hljs-string">&#x27;sqlArray&#x27;</span>,<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(newSqlArray))<br></code></pre></td></tr></table></div></figure><hr><p>使用 <code>watch</code> 函数在每次响应式状态发生变化时触发回调函数：</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-w0rhvalo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-w0rhvalo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div&gt;<br>    &lt;p&gt;Count: &#123;&#123; count &#125;&#125;&lt;/p&gt;<br>    &lt;button @click=&quot;increment&quot;&gt;Increment&lt;/button&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import &#123; ref, watch &#125; from &#x27;vue&#x27;;<br><br>const count = ref(0);<br><br>function increment() &#123;<br>  count.value++;<br>&#125;<br><br>watch(count, (newValue, oldValue) =&gt; &#123;<br>  console.log(&#x27;count 发生变化&#x27;, newValue, oldValue);<br>&#125;);<br>&lt;/script&gt;<br></code></pre></td></tr></table></div></figure><p>在上述代码中，我们使用了 <code>&lt;script setup&gt;</code> 语法来定义组件的逻辑部分。在 <code>&lt;script setup&gt;</code> 中，我们导入了 <code>ref</code> 和 <code>watch</code> 函数，并使用 <code>ref</code> 创建了一个名为 <code>count</code> 的响应式变量，并初始化为 0。</p><p>我们还定义了一个名为 <code>increment</code> 的方法来增加 <code>count</code> 的值。在模板中，我们可以直接绑定 <code>count</code> 变量和 <code>increment</code> 方法。</p><p>最后，我们使用 <code>watch</code> 函数来观察 <code>count</code> 的变化，并在每次变化时输出日志。</p><p><code>watch</code> 的第一个参数可以是不同形式的“数据源”：它可以是一个 ref (包括计算属性)、一个响应式对象、一个 getter 函数、或多个数据源组成的数组：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-c01arxlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-c01arxlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> x = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>)<br><span class="hljs-keyword">const</span> y = <span class="hljs-title function_">ref</span>(<span class="hljs-number">0</span>)<br><br><span class="hljs-comment">/* 单个 ref */</span><br><span class="hljs-title function_">watch</span>(x, <span class="hljs-function">(<span class="hljs-params">newX</span>) =&gt;</span> &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`x is <span class="hljs-subst">$&#123;newX&#125;</span>`</span>)<br>&#125;)<br><br><span class="hljs-comment">/* getter 函数 */</span> <br><span class="hljs-title function_">watch</span>(<br>  <span class="hljs-function">() =&gt;</span> x.<span class="hljs-property">value</span> + y.<span class="hljs-property">value</span>,<br>  <span class="hljs-function">(<span class="hljs-params">sum</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`sum of x + y is: <span class="hljs-subst">$&#123;sum&#125;</span>`</span>)<br>  &#125;<br>)<br><br><span class="hljs-comment">/* 多个来源组成的数组 */</span> <br><span class="hljs-title function_">watch</span>([x, <span class="hljs-function">() =&gt;</span> y.<span class="hljs-property">value</span>], <span class="hljs-function">(<span class="hljs-params">[newX, newY]</span>) =&gt;</span> &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`x is <span class="hljs-subst">$&#123;newX&#125;</span> and y is <span class="hljs-subst">$&#123;newY&#125;</span>`</span>)<br>&#125;)<br></code></pre></td></tr></table></div></figure><p>注意，你不能直接侦听响应式对象的属性值，例如：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-qekvaslo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-qekvaslo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> obj = <span class="hljs-title function_">reactive</span>(&#123; <span class="hljs-attr">count</span>: <span class="hljs-number">0</span> &#125;)<br><br><span class="hljs-comment">/* 错误，因为 watch() 得到的参数是一个 number */</span><br><span class="hljs-title function_">watch</span>(obj.<span class="hljs-property">count</span>, <span class="hljs-function">(<span class="hljs-params">count</span>) =&gt;</span> &#123;<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`count is: <span class="hljs-subst">$&#123;count&#125;</span>`</span>)<br>&#125;)<br></code></pre></td></tr></table></div></figure><p>这里需要用一个返回该属性的 getter 函数：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-9hs2xalo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-9hs2xalo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/* 提供一个 getter 函数 */</span><br><span class="hljs-title function_">watch</span>(<br>  <span class="hljs-function">() =&gt;</span> obj.<span class="hljs-property">count</span>,<br>  <span class="hljs-function">(<span class="hljs-params">count</span>) =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`count is: <span class="hljs-subst">$&#123;count&#125;</span>`</span>)<br>  &#125;<br>)<br></code></pre></td></tr></table></div></figure><p>直接给 <code>watch()</code> 传入一个响应式对象，会隐式地创建一个<code>深层侦听器</code>——该回调函数在所有嵌套的变更时都会被触发：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-5if3eqlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-5if3eqlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> obj = <span class="hljs-title function_">reactive</span>(&#123; <span class="hljs-attr">count</span>: <span class="hljs-number">0</span> &#125;)<br><br><span class="hljs-title function_">watch</span>(obj, <span class="hljs-function">(<span class="hljs-params">newValue, oldValue</span>) =&gt;</span> &#123;<br>  <span class="hljs-comment">/* </span><br><span class="hljs-comment">     在嵌套的属性变更时触发</span><br><span class="hljs-comment">     注意：`newValue` 此处和 `oldValue` 是相等的</span><br><span class="hljs-comment">     因为它们是同一个对象！</span><br><span class="hljs-comment">  */</span><br>&#125;)<br><br>obj.<span class="hljs-property">count</span>++<br></code></pre></td></tr></table></div></figure><p>相比之下，一个返回响应式对象的 getter 函数，只有在返回不同的对象时，才会触发回调：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-tdzmmulo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-tdzmmulo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">watch</span>(<br>  <span class="hljs-function">() =&gt;</span> state.<span class="hljs-property">someObject</span>,<br>  <span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-comment">/* 仅当 state.someObject 被替换时触发 */</span><br>  &#125;<br>)<br></code></pre></td></tr></table></div></figure><p>你也可以给上面这个例子显式地加上 <code>deep</code> 选项，强制转成深层侦听器：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-h8hkp1lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-h8hkp1lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">watch</span>(<br>  <span class="hljs-function">() =&gt;</span> state.<span class="hljs-property">someObject</span>,<br>  <span class="hljs-function">(<span class="hljs-params">newValue, oldValue</span>) =&gt;</span> &#123;<br>    <span class="hljs-comment">/* 注意：`newValue` 此处和 `oldValue` 是相等的，除非 state.someObject 被整个替换了*/</span><br>  &#125;,<br>  &#123; <span class="hljs-attr">deep</span>: <span class="hljs-literal">true</span> &#125;<br>)<br></code></pre></td></tr></table></div></figure><p class="note note-warning">深度侦听需要遍历被侦听对象中的所有嵌套的属性，当用于大型数据结构时，开销很大。因此请只在必要时才使用它，并且要留意性能。</p><p><mark>即时回调的侦听器</mark>：<code>watch</code> 默认是懒执行的：仅当数据源变化时，才会执行回调。但在某些场景中，我们希望在创建侦听器时，立即执行一遍回调。举例来说，我们想请求一些初始数据，然后在相关状态更改时重新请求数据。</p><p>可以通过传入 <code>immediate: true</code> 选项来强制侦听器的回调立即执行：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-63zennlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-63zennlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">watch</span>(source, <span class="hljs-function">(<span class="hljs-params">newValue, oldValue</span>) =&gt;</span> &#123;<br>  <span class="hljs-comment">/* 立即执行，且当 `source` 改变时再次执行 */</span><br>&#125;, &#123; <span class="hljs-attr">immediate</span>: <span class="hljs-literal">true</span> &#125;)<br></code></pre></td></tr></table></div></figure><p>侦听器的回调使用与源完全相同的响应式状态是很常见的。例如下面的代码，在每当 <code>todoId</code> 的引用发生变化时使用侦听器来加载一个远程资源：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-e9d2x9lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-e9d2x9lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> todoId = <span class="hljs-title function_">ref</span>(<span class="hljs-number">1</span>)<br><span class="hljs-keyword">const</span> data = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">null</span>)<br><br><span class="hljs-title function_">watch</span>(todoId, <span class="hljs-keyword">async</span> () =&gt; &#123;<br>  <span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetch</span>(<br>    <span class="hljs-string">`https://jsonplaceholder.typicode.com/todos/<span class="hljs-subst">$&#123;todoId.value&#125;</span>`</span><br>  )<br>  data.<span class="hljs-property">value</span> = <span class="hljs-keyword">await</span> response.<span class="hljs-title function_">json</span>()<br>&#125;, &#123; <span class="hljs-attr">immediate</span>: <span class="hljs-literal">true</span> &#125;)<br></code></pre></td></tr></table></div></figure><p>特别是注意侦听器是如何两次使用 <code>todoId</code> 的，一次是作为源，另一次是在回调中。</p><p>我们可以用<code>watchEffect</code>函数来简化上面的代码。<code>watchEffect()</code> 允许我们自动跟踪回调的响应式依赖。上面的侦听器可以重写为：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-8ac4c3lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-8ac4c3lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">watchEffect</span>(<span class="hljs-keyword">async</span> () =&gt; &#123;<br>  <span class="hljs-keyword">const</span> response = <span class="hljs-keyword">await</span> <span class="hljs-title function_">fetch</span>(<br>    <span class="hljs-string">`https://jsonplaceholder.typicode.com/todos/<span class="hljs-subst">$&#123;todoId.value&#125;</span>`</span><br>  )<br>  data.<span class="hljs-property">value</span> = <span class="hljs-keyword">await</span> response.<span class="hljs-title function_">json</span>()<br>&#125;)<br></code></pre></td></tr></table></div></figure><p>这个例子中，回调会立即执行，不需要指定 <code>immediate: true</code>。在执行期间，它会自动追踪 <code>todoId.value</code> 作为依赖（和计算属性类似）。每当 <code>todoId.value</code> 变化时，回调会再次执行。有了 <code>watchEffect()</code>，我们不再需要明确传递 <code>todoId</code> 作为源值。</p><p>对于这种只有一个依赖项的例子来说，<code>watchEffect()</code> 的好处相对较小。但是对于有多个依赖项的侦听器来说，使用 <code>watchEffect()</code> 可以消除手动维护依赖列表的负担。此外，如果你需要侦听一个嵌套数据结构中的几个属性，<code>watchEffect()</code> 可能会比深度侦听器更有效，因为它将只跟踪回调中被使用到的属性，而不是递归地跟踪所有的属性。</p><p class="note note-info">watchEffect仅会在其同步执行期间，才追踪依赖。在使用异步回调时，只有在第一个await正常工作前访问到的属性才会被追踪。</p><p><code>watch</code> 和 <code>watchEffect</code> 都能响应式地执行有副作用的回调。它们之间的主要区别是追踪响应式依赖的方式：</p><ul><li><code>watch</code>只追踪明确侦听的数据源。它不会追踪任何在回调中访问到的东西。另外，仅在数据源确实改变时才会触发回调。<code>watch</code> 会避免在发生副作用时追踪依赖，因此，我们能更加精确地控制回调函数的触发时机。</li><li><code>watchEffect</code>会在副作用发生期间追踪依赖。它会在同步执行过程中，自动追踪所有能访问到的响应式属性。这更方便，而且代码往往更简洁，但有时其响应性依赖关系会不那么明确。</li></ul><p>当你更改了响应式状态，它可能会同时触发 Vue 组件更新和侦听器回调。</p><p>默认情况下，用户创建的侦听器回调，都会在 Vue 组件更新<strong>之前</strong>被调用。这意味着你在侦听器回调中访问的 DOM 将是被 Vue 更新之前的状态。</p><p>如果想在侦听器回调中能访问被 Vue 更新<strong>之后</strong>的 DOM，你需要指明 <code>flush: &#39;post&#39;</code> 选项：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-pe4jsdlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-pe4jsdlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title function_">watch</span>(source, callback, &#123;<br>  <span class="hljs-attr">flush</span>: <span class="hljs-string">&#x27;post&#x27;</span><br>&#125;)<br><br><span class="hljs-title function_">watchEffect</span>(callback, &#123;<br>  <span class="hljs-attr">flush</span>: <span class="hljs-string">&#x27;post&#x27;</span><br>&#125;)<br></code></pre></td></tr></table></div></figure><p>后置刷新的 <code>watchEffect()</code> 有个更方便的别名 <code>watchPostEffect()</code>：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-o85ww6lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-o85ww6lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> &#123; watchPostEffect &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><br><span class="hljs-title function_">watchPostEffect</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-comment">/* 在 Vue 更新后执行 */</span><br>&#125;)<br></code></pre></td></tr></table></div></figure><p><mark>停止侦听器</mark>：在 <code>setup()</code> 或 <code>&lt;script setup&gt;</code> 中用同步语句创建的侦听器，会自动绑定到宿主组件实例上，并且会在宿主组件卸载时自动停止。因此，在大多数情况下，你无需关心怎么停止一个侦听器。</p><p>一个关键点是，侦听器必须用<strong>同步</strong>语句创建：如果用异步回调创建一个侦听器，那么它不会绑定到当前组件上，你必须手动停止它，以防内存泄漏。例如：</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-4g8kfhlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-4g8kfhlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;script setup&gt;<br>import &#123; watchEffect &#125; from &#x27;vue&#x27;<br><br>&lt;!--它会自动停止--&gt;<br>watchEffect(() =&gt; &#123;&#125;)<br><br>&lt;!--这个则不会--&gt;<br>setTimeout(() =&gt; &#123;<br>  watchEffect(() =&gt; &#123;&#125;)<br>&#125;, 100)<br>&lt;/script&gt;<br></code></pre></td></tr></table></div></figure><p>要手动停止一个侦听器，请调用 <code>watch</code> 或 <code>watchEffect</code> 返回的函数：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-4oxmumlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-4oxmumlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> unwatch = <span class="hljs-title function_">watchEffect</span>(<span class="hljs-function">() =&gt;</span> &#123;&#125;)<br><br><span class="hljs-comment">/* ...当该侦听器不再需要时 */</span><br><span class="hljs-title function_">unwatch</span>()<br></code></pre></td></tr></table></div></figure><p>注意，需要异步创建侦听器的情况很少，请尽可能选择同步创建。如果需要等待一些异步数据，你可以使用条件式的侦听逻辑：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-8nhyxhlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-8nhyxhlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/* 需要异步请求得到的数据 */</span><br><span class="hljs-keyword">const</span> data = <span class="hljs-title function_">ref</span>(<span class="hljs-literal">null</span>)<br><br><span class="hljs-title function_">watchEffect</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>  <span class="hljs-keyword">if</span> (data.<span class="hljs-property">value</span>) &#123;<br>    <span class="hljs-comment">/* 数据加载后执行某些操作... */</span><br>  &#125;<br>&#125;)<br></code></pre></td></tr></table></div></figure><p><code>handler</code>函数也常用于<code>watch</code>和<code>computed</code>等功能中，用于监听数据变化并进行相应的处理。<code>handler</code>函数通常接受两个参数：</p><ul><li>newVal：表示数据发生变化后的新值。</li><li>oldVal：表示数据发生变化前的旧值。</li></ul><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-39j308lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-39j308lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-attr">watch</span>: &#123;<br>  <span class="hljs-string">&#x27;obj.a&#x27;</span>: &#123;<br>    <span class="hljs-title function_">handler</span>(<span class="hljs-params">newName, oldName</span>) &#123;<br>      <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;obj.a changed&#x27;</span>);<br>    &#125;,<br>    <span class="hljs-attr">immediate</span>: <span class="hljs-literal">true</span>,<br>    <span class="hljs-comment">/* deep: true */</span><br>  &#125;<br>&#125; <br></code></pre></td></tr></table></div></figure><hr><p>使用 <code>v-model</code> 指令来实现 <code>el-dialog</code> 的显示和隐藏。这个指令可以让你双向绑定一个值，并自动更新该值的状态：</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-mfvhfnlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-mfvhfnlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;div&gt;<br>    &lt;el-button @click=&quot;showDialog = true&quot;&gt;打开对话框&lt;/el-button&gt;<br><br>    &lt;el-dialog v-model=&quot;showDialog&quot; title=&quot;对话框标题&quot;&gt;<br>      &lt;!-- 对话框内容 --&gt;<br>    &lt;/el-dialog&gt;<br>  &lt;/div&gt;<br>&lt;/template&gt;<br><br>&lt;script&gt;<br>import &#123; ref &#125; from &#x27;vue&#x27;;<br><br>export default &#123;<br>  setup() &#123;<br>    const showDialog = ref(false);<br><br>    return &#123;<br>      showDialog,<br>    &#125;;<br>  &#125;,<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></div></figure><p>在上面的示例中，我们创建了一个名为 <code>showDialog</code> 的响应式变量，并将其初始值设为 <code>false</code> ，表示对话框默认是隐藏的。当点击按钮时，我们将 <code>showDialog</code> 的值设为 <code>true</code> ，对话框将显示出来。</p><p>通过使用 <code>v-model=&quot;showDialog&quot;</code>，我们将 <code>showDialog</code> 的值与 <code>el-dialog</code> 组件的 <code>visible</code> 属性进行了绑定。当 <code>showDialog</code> 的值发生变化时，<code>el-dialog</code> 组件的显示状态也会相应地发生变化。</p><hr><p>数组深拷贝：</p><ol><li>使用 <code>Array.from()</code> 方法进行浅拷贝，再结合 <code>map()</code> 或者 <code>JSON.parse(JSON.stringify())</code> 方法进行深拷贝：</li></ol><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-l01nr9lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-l01nr9lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// 浅拷贝</span><br><span class="hljs-keyword">const</span> shallowCopy = <span class="hljs-title class_">Array</span>.<span class="hljs-title function_">from</span>(originalArray);<br><br><span class="hljs-comment">// 深拷贝方式一：使用 map()</span><br><span class="hljs-keyword">const</span> deepCopy1 = originalArray.<span class="hljs-title function_">map</span>(<span class="hljs-function"><span class="hljs-params">item</span> =&gt;</span> (&#123;...item&#125;));<br><br><span class="hljs-comment">// 深拷贝方式二：使用 JSON.parse(JSON.stringify())</span><br><span class="hljs-keyword">const</span> deepCopy2 = <span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">parse</span>(<span class="hljs-title class_">JSON</span>.<span class="hljs-title function_">stringify</span>(originalArray));<br></code></pre></td></tr></table></div></figure><ol start="2"><li>使用扩展运算符 <code>...</code> 进行深拷贝：</li></ol><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-imwdzflo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-imwdzflo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> deepCopy = [...originalArray];<br></code></pre></td></tr></table></div></figure><p>需要注意的是，上述方法在深拷贝过程中只适用于纯数据（例如字符串、数字、布尔值、对象和数组）。如果数组中的元素是引用类型（如对象），则仅拷贝了引用，而不是创建新的对象。如果需要完全复制对象及其嵌套属性，可以考虑使用第三方库如 <code>lodash.cloneDeep()</code>。</p><p>例如，在 Vue 3 组件中，你可以这样使用 <code>lodash</code> 进行深拷贝：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-rux0czlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-rux0czlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">import</span> cloneDeep <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;lodash/cloneDeep&#x27;</span>;<br><br><span class="hljs-keyword">const</span> deepCopy = <span class="hljs-title function_">cloneDeep</span>(originalArray);<br></code></pre></td></tr></table></div></figure><p>请注意，深拷贝数组可能会导致性能问题，特别是对于包含大量数据的数组。在处理大型数据集时，请谨慎使用深拷贝。</p><hr><p>url替换所有的空格：</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-rd1prslo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-rd1prslo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">:href</span>=<span class="hljs-string">&quot;handleDecode(item)&quot;</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;&#123;textDecoration:&#x27;none&#x27;&#125;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br></code></pre></td></tr></table></div></figure><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-xuxlxvlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-xuxlxvlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> <span class="hljs-title function_">handleDecode</span>=(<span class="hljs-params">item:string</span>)=&gt;&#123;<br>    <span class="hljs-keyword">let</span> decodeUrl=<span class="hljs-string">&#x27;/api/&#x27;</span>+decodeURIComponenr(item)<br>    <span class="hljs-keyword">let</span> replaceUrl=decodeUrl.<span class="hljs-title function_">replace</span>(<span class="hljs-regexp">/ /g</span>,<span class="hljs-string">&#x27;&#x27;</span>)<br>    <span class="hljs-keyword">return</span> replaceUrl<br>&#125;<br></code></pre></td></tr></table></div></figure><hr><p>全局引入element plus：</p><figure class="highlight shell"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-euf2nalo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-euf2nalo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">npm i element-plus --save<br></code></pre></td></tr></table></div></figure><p>element plus的分页  &#x2F;page和Go to改为中文：</p><p>main.ts：</p><figure class="highlight ts"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-hao65klo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-hao65klo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> <span class="hljs-title class_">ElementPlus</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;element-plus&#x27;</span><br><span class="hljs-keyword">import</span> zhCn <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;elementplus/dist/locale/zh-cn.mjs&#x27;</span><br>app.<span class="hljs-title function_">use</span>(<span class="hljs-title class_">ElementPlus</span>,&#123;<br>    <span class="hljs-attr">locale</span>: zhCn,<br>&#125;)<br></code></pre></td></tr></table></div></figure><p>src文件夹下面新建<code>element-plus.d.ts</code>：</p><figure class="highlight ts"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-1nu6vxlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-1nu6vxlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">declare</span> <span class="hljs-variable language_">module</span> <span class="hljs-string">&#x27;element-plus/dist/locale/zh-cn.mjs&#x27;</span>&#123;<br>    <span class="hljs-keyword">const</span> <span class="hljs-attr">zhCn</span>: <span class="hljs-built_in">any</span><br>    <span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> znCn<br>&#125;<br></code></pre></td></tr></table></div></figure><hr><p>el-table滚动条到最底部：</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-gtkbdjlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-gtkbdjlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">el-table</span> <span class="hljs-attr">ref</span>=<span class="hljs-string">&quot;tableRef&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">el-table</span>&gt;</span><br></code></pre></td></tr></table></div></figure><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-mf1y9rlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-mf1y9rlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> <span class="hljs-title function_">handleAdd</span>=(<span class="hljs-params"></span>)=&gt;&#123;<br>    <span class="hljs-title function_">nextTick</span>(<span class="hljs-function">()=&gt;</span>tableRef.<span class="hljs-property">value</span>.<span class="hljs-title function_">scrollTo</span>(<span class="hljs-number">0</span>,tableRef.<span class="hljs-property">value</span>.<span class="hljs-property">$refs</span>.<span class="hljs-property">bodyWrapper</span>.<span class="hljs-property">scrollHeight</span>)<br>&#125;)<br>&#125;<br></code></pre></td></tr></table></div></figure><hr><p>设置el-button点击多次只触发一次方法：</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-4kupq6lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-4kupq6lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;template&gt;<br>  &lt;el-button @click=&quot;handleClick&quot; :disabled=&quot;isButtonDisabled&quot;&gt;按钮&lt;/el-button&gt;<br>&lt;/template&gt;<br><br>&lt;script setup&gt;<br>import &#123; ref &#125; from &#x27;vue&#x27;;<br><br>const isButtonDisabled = ref(false);<br><br>const handleClick = () =&gt; &#123;<br>  if (!isButtonDisabled.value) &#123;<br>    isButtonDisabled.value = true;<br>    setTimeout(() =&gt; &#123;<br>      isButtonDisabled.value = false;<br>    &#125;, 1000); <br>  &#125;<br>&#125;;<br>&lt;/script&gt;<br></code></pre></td></tr></table></div></figure><hr><p>el-tooltip的内容可滚动：</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-kis3qdlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-kis3qdlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">el-tooltip</span> <span class="hljs-attr">:enterable</span>=<span class="hljs-string">&quot;true&quot;</span> <span class="hljs-attr">:popper-style</span>=<span class="hljs-string">&quot;&#123;width: px2rem(&#x27;400&#x27;)&#125;&quot;</span> <span class="hljs-attr">:popper-options</span>=<span class="hljs-string">&quot;&#123;modifies:&#123;preventOverflow:&#123;boundariesElement:&#x27;window&#x27;&#125;&#125;&#125;&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">slot</span>=<span class="hljs-string">&quot;content&quot;</span>&gt;</span><br>        &#123;&#123;item&#125;&#125;<br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">content</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">:style</span>=<span class="hljs-string">&quot;&#123;maxHeight:px2rem(&#x27;350&#x27;),overflowY: &#x27;scroll&#x27;,lineHeight:px2rem(&#x27;25&#x27;)&#125;&quot;</span>&gt;</span><br>            &#123;&#123;item&#125;&#125;<br>        <span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">el-tooltip</span>&gt;</span><br></code></pre></td></tr></table></div></figure><hr><p>使用svg-icon：</p><ol><li><p>在 components 目录下新建 SvgIcon.vue 文件</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-gxbz8hlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-gxbz8hlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;!-- src/components/SvgIcon.vue --&gt;<br>&lt;template&gt;<br>  &lt;svg :class=&quot;svgClass&quot; aria-hidden=&quot;true&quot;&gt;<br>    &lt;use :xlink:href=&quot;iconClassName&quot; :fill=&quot;color&quot; /&gt;<br>  &lt;/svg&gt;<br>&lt;/template&gt;<br>&lt;script setup lang=&quot;ts&quot;&gt;<br>import &#123; computed &#125; from &#x27;vue&#x27;;<br>const props = defineProps(&#123;<br>  iconName: &#123;<br>    type: String,<br>    required: true<br>  &#125;,<br>  className: &#123;<br>    type: String,<br>    default: &#x27;&#x27;<br>  &#125;,<br>  color: &#123;<br>    type: String,<br>    default: &#x27;#409eff&#x27;<br>  &#125;<br>&#125;);<br><br>const iconClassName = computed(()=&gt;&#123;<br>  return `#$&#123;props.iconName&#125;`;<br>&#125;)<br><br>const svgClass = computed(() =&gt; &#123;<br>  if (props.className) &#123;<br>    return `svg-icon $&#123;props.className&#125;`;<br>  &#125;<br>  return &#x27;svg-icon&#x27;;<br>&#125;);<br>&lt;/script&gt;<br>&lt;style scoped&gt;<br>.svg-icon &#123;<br>  width: 1em;<br>  height: 1em;<br>  position: relative;<br>  fill: currentColor;<br>  vertical-align: -2px;<br>&#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></div></figure></li><li><p>在 main.ts 中全局注册：</p><figure class="highlight ts"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-0cw5molo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-0cw5molo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> &#123; createApp &#125; <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">App</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./App.vue&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-title class_">SvgIcon</span> <span class="hljs-keyword">from</span> <span class="hljs-string">&#x27;./components/SvgIcon.vue&#x27;</span><br><br>app = <span class="hljs-title function_">createApp</span>(<span class="hljs-title class_">App</span>)<br>app.<span class="hljs-title function_">component</span>(<span class="hljs-string">&#x27;SvgIcon&#x27;</span>, <span class="hljs-title class_">SvgIcon</span>);<br>app.<span class="hljs-title function_">mount</span>(<span class="hljs-string">&#x27;#app&#x27;</span>)<br></code></pre></td></tr></table></div></figure></li><li><p>引入iconfont图标：在项目 assets 目录下新建svg.js文件，然后将 iconfont 在线地址中提供的代码全部复制过来。【加载较慢】</p><img src="88e768a38fb54e8eb533fb4a875020f8.png" alt="在这里插入图片描述" style="zoom:50%;" /></li><li><p>具体使用：</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-q2tg8zlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-q2tg8zlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">template</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">svg-icon</span> <span class="hljs-attr">iconName</span>=<span class="hljs-string">&quot;icon-gongzuoleixing&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">svg-icon</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br></code></pre></td></tr></table></div></figure></li></ol><p>修改svg图标颜色，保存为副本：</p><img src="image-20231023162606697.png" alt="image-20231023162606697" style="zoom:50%;" /><hr><p>去除首尾空行：</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-t7xzchlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-t7xzchlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">el-input</span> <span class="hljs-attr">v-model.trim</span>=<span class="hljs-string">&quot;inputText&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">el-input</span>&gt;</span><br></code></pre></td></tr></table></div></figure><hr><p>css样式覆盖：</p><figure class="highlight css"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-17s4allo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-17s4allo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.tocbot-list</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0.95rem</span>;<br>&#125;<br><br><span class="hljs-comment">/* 覆盖前一个样式 */</span><br><span class="hljs-selector-class">.tocbot-list</span> <span class="hljs-selector-tag">a</span> &#123;<br>  <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0.75rem</span> <span class="hljs-meta">!important</span>;<br>&#125;<br></code></pre></td></tr></table></div></figure><hr><h2 id="图片居中"><a href="#图片居中" class="headerlink" title="图片居中"></a>图片居中</h2><p>设置<code>&lt;img src=&quot;&quot; class=&quot;align&quot;&gt;</code>的居中方式：</p><figure class="highlight css"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-aq6ee8lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-aq6ee8lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs css">//水平靠左<br><span class="hljs-selector-class">.align</span> &#123;<br>    <span class="hljs-attribute">display</span>: inline;<br>    <span class="hljs-attribute">float</span>: left;<br>&#125;<br> <br>//水平靠右<br><span class="hljs-selector-class">.align</span> &#123;<br>    <span class="hljs-attribute">display</span>: inline;<br>    <span class="hljs-attribute">float</span>: right;<br>&#125;<br> <br>//水平居中<br><span class="hljs-selector-class">.align</span> &#123;<br>    <span class="hljs-attribute">clear</span>: both;<br>    <span class="hljs-attribute">display</span>: block;<br>    <span class="hljs-attribute">margin</span>: auto;<br>&#125;<br></code></pre></td></tr></table></div></figure><p>div里的img标签实现水平垂直居中<code>&lt;div&gt;&lt;img src=&quot;&quot;&gt;&lt;/div&gt;</code>：</p><ol><li>将display设置成table-cell，水平居中设置text-align为center，垂直居中设置vertical-align为middle：</li></ol><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-e5hwz0lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-e5hwz0lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs vue"><br>&lt;style type=&quot;text/css&quot;&gt;<br>    *&#123;<br>        margin: 0;<br>        padding: 0;<br>    &#125;<br>    div&#123;<br>        width: 150px;<br>        height: 100px;<br>        display: table-cell;<br>        vertical-align: middle;<br>        text-align: center;<br>        border: 1px solid #000;<br>    &#125;<br>    img &#123;<br>        width: 50px;<br>        height: 50px;<br>    &#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></div></figure><ol start="2"><li>通过position定位实现。将div设置成相对定位relative，将img设置成绝对定位absolute，left:50%，top:50%,此时图片的左上角位于div的中心，要是图片的中心位于div的中心，就需要将图片向上移动图片高度的一半，并向左移动图片宽度的一半：</li></ol><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-kohre6lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-kohre6lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;style type=&quot;text/css&quot;&gt;<br>    *&#123;<br>        margin: 0;<br>        padding: 0;<br>    &#125;<br>    div&#123;<br>        width: 150px;<br>        height: 100px;<br>        position: relative;<br>        border: 1px solid #000;<br>    &#125;<br>    img &#123;<br>        width: 50px;<br>        height: 50px;<br>        position: absolute;<br>        top: 50%;<br>        left: 50%;<br>        margin-top: -25px; // 高度的一半<br>        margin-left: -25px; // 宽度的一半<br>    &#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></div></figure><ol start="3"><li>用于不清楚图片或元素的真实宽高情况：通过position定位来实现。将div设置成相对定位relative，将img设置成绝对定位absolute，left:50%，top:50%，此时图片的左上角位于div的中心，要是图片的中心位于div的中心，就需要将图片向上移动图片高度的一半，并向左移动图片宽度的一半，如果不知道元素的宽高，可以用transform: translate(-50%,-50%)：</li></ol><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-vwzzqqlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-vwzzqqlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;style type=&quot;text/css&quot;&gt;<br>    *&#123;<br>        margin: 0;<br>        padding: 0;<br>    &#125;<br>    div&#123;<br>        width: 150px;<br>        height: 100px;<br>        position: relative;<br>        border: 1px solid #000;<br>    &#125;<br>    img &#123;<br>        width: 50px;<br>        height: 50px;<br>        position: absolute;<br>        top: 50%;<br>        left: 50%;<br>        transform: translate(-50%,-50%);<br>    &#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></div></figure><ol start="4"><li>弹性布局flex：</li></ol><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-wyhiuclo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-wyhiuclo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;style type=&quot;text/css&quot;&gt;<br>    *&#123;<br>        margin: 0;<br>        padding: 0;<br>    &#125;<br>    div&#123;<br>        width: 150px;<br>        height: 100px;<br>        border: 1px solid #000;<br>        display: flex;<br>        justify-content: center;<br>        align-items: center;<br>        margin: 0 auto;<br>    &#125;<br>    img &#123;<br>        width: 50px;<br>        height: 50px;<br>    &#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></div></figure><ol start="5"><li>设置父div为table-cell属性：</li></ol><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-n9rgimlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-n9rgimlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;style type=&quot;text/css&quot;&gt;<br>    *&#123;<br>        margin: 0;<br>        padding: 0;<br>    &#125;<br>    div&#123;<br>        width: 200px;<br>        height: 200px;<br>        border: 1px solid #000;<br>        display: table-cell;<br>        text-align: center;<br>        vertical-align: middle;<br>    &#125;<br>    img &#123;<br>        width: 100px;<br>        height: 100px;<br>        display: inline-block;<br>    &#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></div></figure><ol start="6"><li>无固定宽高：</li></ol><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-ha9mfelo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-ha9mfelo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;style type=&quot;text/css&quot;&gt;<br>    *&#123;<br>        margin: 0;<br>        padding: 0;<br>    &#125;<br>    div&#123;<br>        width: 200px;<br>        height: 200px;<br>        margin: 0 auto;<br>        text-align: center;<br>        position: relative;<br>        border: 1px solid #000;<br>    &#125;<br>    img &#123;<br>        width: 100px;<br>        height: 100px;<br>        position: absolute;<br>        border: 1px solid #000;<br>        left: 50%;<br>        top: 50%;<br>        -webkit-transform: translate(-50%,-50%);<br>        -moz-transform:translate(-50%,-50%);<br>        -ms-transform: translate(-50%,-50%);<br>        -o-transform: translate(-50%,-50%);<br>        transform: translate(-50%,-50%);<br>    &#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></div></figure><ol start="7"><li>固定宽高：</li></ol><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-n6ln98lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-n6ln98lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;style type=&quot;text/css&quot;&gt;<br>    *&#123;<br>        margin: 0;<br>        padding: 0;<br>    &#125;<br>    div&#123;<br>        width: 200px;<br>        height: 200px;<br>        border: 1px solid #000;<br>        margin: 0 auto;<br>        text-align: center;<br>        position: relative;<br>    &#125;<br>    img &#123;<br>        width: 100px;<br>        height: 100px;<br>        position: absolute;<br>        border: 1px solid #000;<br>        left: 50%;<br>        top: 50%;<br>        margin-top: -50px;<br>        margin-left: -50px;<br>    &#125;<br>&lt;/style&gt;<br></code></pre></td></tr></table></div></figure><hr><p>点击按钮复制文字：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-qk5vbtlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-qk5vbtlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> text = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">createElement</span>(<span class="hljs-string">&#x27;textarea&#x27;</span>);<br>text.<span class="hljs-property">value</span> = <span class="hljs-variable language_">this</span>.<span class="hljs-property">textToCopy</span>;<br><span class="hljs-comment">//检查浏览器是否支持剪贴板 API 并且页面处于安全上下文中</span><br> <span class="hljs-keyword">if</span> (navigator.<span class="hljs-property">clipboard</span> &amp;&amp; <span class="hljs-variable language_">window</span>.<span class="hljs-property">isSecureContext</span>) &#123;<br> <span class="hljs-title class_">ElMessage</span>(&#123;<br>        <span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;复制成功&#x27;</span>,<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;success&#x27;</span>,<br>    &#125;)<br>     <span class="hljs-keyword">return</span> navigator.<span class="hljs-property">clipboard</span>.<span class="hljs-title function_">writeText</span>(text.<span class="hljs-property">value</span>);<br> &#125;<br><span class="hljs-keyword">else</span>&#123;<br>    <span class="hljs-comment">/* 将textarea添加到文档中 */</span><br>    <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">appendChild</span>(textarea);<br>    <span class="hljs-comment">/* 选中textarea中的文本 */</span> <br>    textarea.<span class="hljs-title function_">select</span>();<br>    <span class="hljs-title class_">ElMessage</span>(&#123;<br>        <span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;复制成功&#x27;</span>,<br>        <span class="hljs-attr">type</span>: <span class="hljs-string">&#x27;success&#x27;</span>,<br>    &#125;)<br>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Promise</span>(res,rej)=&gt;&#123;<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">execCommand</span>(<span class="hljs-string">&#x27;copy&#x27;</span>) ? <span class="hljs-title function_">res</span>(<span class="hljs-string">&#x27;复制成功&#x27;</span>) : <span class="hljs-title function_">rej</span>(<span class="hljs-string">&#x27;复制失败&#x27;</span>)<br>        <span class="hljs-variable language_">document</span>.<span class="hljs-property">body</span>.<span class="hljs-title function_">removeChild</span>(text)<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></div></figure><hr><p>调用接口，结果返回数据是从缓存中拿到的而非实际接口中——from disk cache：在utils文件夹下的request.ts文件中加入：</p><figure class="highlight typescript"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-lqx1bclo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-lqx1bclo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs typescript"><span class="hljs-keyword">const</span> instance=axios.<span class="hljs-title function_">create</span>(&#123;<br>    <span class="hljs-attr">headers</span>: &#123;<br>        <span class="hljs-string">&#x27;Cache-Control&#x27;</span>: <span class="hljs-string">&#x27;no-cache&#x27;</span>,<br>    &#125;<br>&#125;)<br></code></pre></td></tr></table></div></figure><hr><p>获取Promise对象中的PromiseResult中的数据：Promise 简单说就是一个容器，里面保存着某个未来才会结束的事件（通常是一个异步操作的结果。</p><img src="image-20231018144700439.png" alt="image-20231018144700439" style="zoom:50%;" /><ol><li>异步获取Promise对象的值还可以使用Promise对象的then方法，但是then方法是在接口请求对象的里面执行数据处理的操作。</li></ol><figure class="highlight javascript"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-8ys7n4lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-8ys7n4lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-title function_">getqueryAIRecommend</span>().<span class="hljs-title function_">then</span>(<span class="hljs-function"><span class="hljs-params">res</span> =&gt;</span> &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(res)<br>&#125;)<br></code></pre></td></tr></table></div></figure><ol start="2"><li>通过 async await 来获取：async 用于申明一个function是异步的；而await则可以认为是 async await的简写形式，是等待一个异步方法执行完成的。</li></ol><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-165k5jlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-165k5jlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">async</span> <span class="hljs-title function_">getShelfList</span>(<span class="hljs-params">id</span>) &#123;<br>  letlist = [];<br>  list = <span class="hljs-keyword">await</span> <span class="hljs-title function_">infoStore</span>(id)<br>  <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(list);<br>&#125;<br></code></pre></td></tr></table></div></figure><p>async&#x2F;awiat的使用规则：</p><ol><li>async和await要一起用；</li><li>async 表示这是一个async函数， await只能用在async函数里面，不能单独使用；</li><li>async 返回的是一个Promise对象，await就是等待这个promise的返回结果后，再继续执行；</li><li>await 等待的是一个Promise对象，后面必须跟一个Promise对象，但是不必写then()，直接就可以得到返回值。</li></ol><hr><p>单行省略：</p><figure class="highlight css"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-km0hjulo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-km0hjulo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.ellipsis</span> &#123;<br>  <span class="hljs-attribute">white-space</span>: nowrap;<br>  <span class="hljs-attribute">text-overflow</span>: ellipsis;<br>  <span class="hljs-attribute">overflow</span>: hidden;<br>&#125;<br></code></pre></td></tr></table></div></figure><p>多行省略：</p><figure class="highlight css"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-8sivsulo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-8sivsulo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.ellipsis</span> &#123;<br>  <span class="hljs-attribute">display</span>: -webkit-box;<br>  -webkit-line-clamp: <span class="hljs-number">2</span>;<br>  -webkit-box-orient: vertical;<br>  <span class="hljs-attribute">overflow</span>: hidden;<br>  <span class="hljs-attribute">text-overflow</span>: ellipsis;<br>&#125;<br></code></pre></td></tr></table></div></figure><p><code>-webkit-line-clamp</code> CSS 属性可以把块容器中的内容限制为指定的行数。它只有在 display 属性设置成 -webkit-box 或者 -webkit-inline-box 并且 box-orient 属性设置成 vertical时才有效果。在大部分情况下，也需要设置 overflow 属性为 hidden，否则，里面的内容不会被裁减，并且在内容显示为指定行数后还会显示省略号。</p><hr><p>tab标签页：要让 <code>label</code> 的值为 &quot;制度1&quot;、&quot;制度2&quot; 等，你可以在模板中使用插值表达式和字符串拼接的方式。</p><ol><li><p>方法一：</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-8wmnzllo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-8wmnzllo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">el-tab-pane</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(item, xindex) in tmp&quot;</span> <span class="hljs-attr">:label</span>=<span class="hljs-string">&quot;&#x27;制度&#x27; + (xindex + 1)&quot;</span>&gt;</span><br>     <span class="hljs-comment">&lt;!-- 其他内容 --&gt;</span><br>   <span class="hljs-tag">&lt;/<span class="hljs-name">el-tab-pane</span>&gt;</span><br></code></pre></td></tr></table></div></figure><p>在这里，<code>(xindex + 1)</code> 表示索引 <code>xindex</code> 的值加 1，然后将其与字符串 &quot;制度&quot; 进行拼接，得到最终的 <code>label</code> 值。</p><p class="note note-success" style="border-left: 4px solid #f0ad4e;padding: 10px 15px;color: #777;background-color: #fdf8ea;">不加括号：制度01 制度11 制度21</p></li><li><p>方法二：插槽</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-yek511lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-yek511lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">el-tab-pane</span> <span class="hljs-attr">v-for</span>=<span class="hljs-string">&quot;(item, xindex) in tmp&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">template</span> #<span class="hljs-attr">label</span>&gt;</span>制度&#123;&#123;xindex + 1&#125;&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">template</span>&gt;</span><br>    <span class="hljs-comment">&lt;!-- 其他内容 --&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">el-tab-pane</span>&gt;</span><br></code></pre></td></tr></table></div></figure></li></ol><p>elementplus修改el-tab-pane的label字体大小：</p><figure class="highlight css"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-y2ebazlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-y2ebazlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">:deep .el-tabs__item&#123;<br>    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">20px</span> <span class="hljs-meta">!important</span>;<br>&#125;<br></code></pre></td></tr></table></div></figure><hr><p>Vue应用中代码高亮：官网<a href="https://highlightjs.org/">https://highlightjs.org/</a></p><p>Github仓库<a href="https://github.com/highlightjs/highlight.js">https://github.com/highlightjs/highlight.js</a></p><p><a href="https://github.com/highlightjs/vue-plugin">https://github.com/highlightjs/vue-plugin</a></p><p>文档教程<a href="https://highlightjs.readthedocs.io/en/latest/">https://highlightjs.readthedocs.io/en/latest/</a></p><figure class="highlight bash"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-32nhyjlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-32nhyjlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install highlight.js<br>npm install --save @highlightjs/vue-plugin<br></code></pre></td></tr></table></div></figure><p>main.ts：</p><figure class="highlight ts"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-yobtbvlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-yobtbvlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;highlight.js/styles/github-dark-dimmed.css&#x27;</span><br><span class="hljs-keyword">import</span> <span class="hljs-string">&#x27;highlight.js/lib/common&#x27;</span>;<br><span class="hljs-keyword">import</span> hljsVuePlugin <span class="hljs-keyword">from</span> <span class="hljs-string">&quot;@highlightjs/vue-plugin&quot;</span>;<br><br><span class="hljs-keyword">const</span> app = <span class="hljs-title function_">createApp</span>(<span class="hljs-title class_">App</span>)<br>app.<span class="hljs-title function_">use</span>(router)<br>app.<span class="hljs-title function_">use</span>(hljsVuePlugin)<br></code></pre></td></tr></table></div></figure><img src="image-20231027140707342.png" alt="image-20231027140707342" style="zoom:50%;" /><p>home.vue：</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-7dclfrlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-7dclfrlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs vue">&lt;script lang=&quot;ts&quot; setup&gt;<br>import &#123; px2rem &#125; from &#x27;@/utils/index&#x27;<br>const code = `<br>CREATE TABLE &quot;topic&quot; (<br>    &quot;id&quot; integer NOT NULL PRIMARY KEY,<br>    &quot;forum_id&quot; integer NOT NULL,<br>    &quot;subject&quot; varchar(255) NOT NULL<br>);<br>ALTER TABLE &quot;topic&quot;<br>ADD CONSTRAINT forum_id FOREIGN KEY (&quot;forum_id&quot;)<br>REFERENCES &quot;forum&quot; (&quot;id&quot;);<br><br>-- Initials<br>insert into &quot;topic&quot; (&quot;forum_id&quot;, &quot;subject&quot;)<br>values (2, &#x27;D&#x27;&#x27;artagnian&#x27;);<br>`<br><br>&lt;/script&gt;<br><br>&lt;template&gt;<br>  &lt;p class=&quot;input&quot; :style=&quot;&#123; fontSize: px2rem(&#x27;20px&#x27;) &#125;&quot;&gt;你好&lt;/p&gt;<br>  &lt;highlightjs autodetect :code=&quot;code&quot; /&gt;<br>&lt;/template&gt;<br><br>&lt;style lang=&quot;scss&quot; scoped&gt;<br>&lt;/style&gt;<br></code></pre></td></tr></table></div></figure><img src="image-20231027141156678.png" alt="image-20231027141156678" style="zoom:50%;" /><p>实现效果：</p><img src="image-20231027142222797.png" alt="image-20231027142222797" style="zoom:40%;" /><hr><p>web富文本编辑器：<a href="https://www.wangeditor.com/v5">https://www.wangeditor.com/v5</a></p><p class="note note-danger" style="border-left: 4px solid #d9534f;padding: 10px 15px;color: #777;background-color: #fcf1f2;">无法找到模块c@wangeditor,/editor-for-vue”的声明文件。“d:/桌面/vite-project/node modules/@wangeditor/editor-for-vue/dist/index.esm.js'隐式拥有"any"类型。There are types at'd:/桌面/vite-project/node_modules/@wangeditor/editor-for-vue/dist/src/index.d.ts',butthis result could not be resolved when respecting package.json "exports".The '@wangeditor/editor-for-vue'library may need to update itspackage.json or typings.ts(7016)</p><img src="image-20231027150932023.png" alt="image-20231027150932023" style="zoom:50%;" /><p>解决方法：新建typings.d.ts文件</p><figure class="highlight ts"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-cg4qrmlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-cg4qrmlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ts"><span class="hljs-keyword">declare</span> <span class="hljs-variable language_">module</span> <span class="hljs-string">&#x27;@wangeditor/editor-for-vue&#x27;</span><br></code></pre></td></tr></table></div></figure><img src="image-20231027154725474.png" alt="image-20231027154725474" style="zoom:50%;" /><hr><p>多类选择器：<code>CSS</code>中类选择器用点号表示。实际项目中一个<code>div</code>元素为了能被多个样式表匹配到（样式复用），通常<code>div</code>的<code>class</code>中由好几段组成，如<code>&lt;div class=&quot;user login&quot;&gt;</code>能被<code>.user</code>和<code>.login</code>两个选择器选中。如果这两个选择器中有相同的属性值，则该属性值先被改为<code>.user</code>中的值，再被改为<code>.login</code>中的值，即重复的属性以最后一个选择器中的属性值为准。测试如下：</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-uyc4solo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-uyc4solo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">style</span>&gt;</span><span class="language-css"> </span><br><span class="language-css"><span class="hljs-selector-class">.user</span>&#123;</span><br><span class="language-css">    <span class="hljs-attribute">font-size</span>: <span class="hljs-number">30px</span>;</span><br><span class="language-css">    <span class="hljs-attribute">background-color</span>:red;</span><br><span class="language-css">&#125;</span><br><span class="language-css"><span class="hljs-selector-class">.login</span>&#123;</span><br><span class="language-css">    <span class="hljs-attribute">background-color</span>:blue;</span><br><span class="language-css">&#125;</span><br><span class="language-css"></span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;user&#x27;</span>&gt;</span>你好。这是一个 DIV 元素，class=&#x27;user&#x27;。<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;login&#x27;</span>&gt;</span>你好。这是一个 DIV 元素，class=&#x27;login&#x27;。<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&#x27;user login&#x27;</span>&gt;</span>你好。这是一个 DIV 元素，class=&#x27;user login&#x27;。<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br></code></pre></td></tr></table></div></figure><p>第三个<code>div</code>元素的背景颜色以<code>.login</code>中的为准，效果如下图：<img src="20190913225636255.png" alt="在这里插入图片描述" style="zoom:50%;" /></p><p><code>CSS</code>中多个类选择器之间有没有空格是怎样的匹配规则？<code>.user.login</code>和<code>.user .login</code>（中间有空格）的区别？</p><p>电商项目中的导航栏，包括用户的登录&#x2F;注册&#x2F;注销，以及购物车等信息。</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-i2xaoflo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-i2xaoflo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;w&quot;</span>&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;user-info&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;user not-login&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;link js-login&quot;</span>&gt;</span>登录<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;link js-register&quot;</span>&gt;</span>注册<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;user login&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;link-text&quot;</span>&gt;</span><br>                    欢迎，<br>                    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;username&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;link&quot;</span>&gt;</span>退出<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><br>        <span class="hljs-comment">&lt;!-- 右侧的导航链接 --&gt;</span><br>        <span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-list&quot;</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;link&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./cart.html&quot;</span>&gt;</span><br>                    <span class="hljs-tag">&lt;<span class="hljs-name">i</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fa fa-shopping-cart&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">i</span>&gt;</span><br>                    购物车(<span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;cart-cont&quot;</span>&gt;</span>0<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>)<br>                <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;link&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./order-list.html&quot;</span>&gt;</span>我的订单<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;link&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./user-center.html&quot;</span>&gt;</span>我的MMall<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>            <span class="hljs-tag">&lt;<span class="hljs-name">li</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;nav-item&quot;</span>&gt;</span><br>                <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;link&quot;</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;./about.html&quot;</span>&gt;</span>关于MMall<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><br>            <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br>        <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br>    <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></div></figure><figure class="highlight css"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-cke7a6lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-cke7a6lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.nav</span>&#123;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-number">#eee</span>;<br>    <span class="hljs-attribute">height</span>: <span class="hljs-number">30px</span>;<br>    <span class="hljs-attribute">line-height</span>: <span class="hljs-number">30px</span>;<br>&#125;<br><br><span class="hljs-comment">/* 用户部分 */</span><br><span class="hljs-selector-class">.nav</span> <span class="hljs-selector-class">.user</span>&#123;<br>    <span class="hljs-attribute">float</span>: left;<br>&#125;<br><span class="hljs-selector-class">.nav</span> <span class="hljs-selector-class">.user</span><span class="hljs-selector-class">.login</span>&#123;<br>    <span class="hljs-attribute">display</span>: none;<br>&#125;<br><span class="hljs-selector-class">.nav</span> <span class="hljs-selector-class">.user</span> <span class="hljs-selector-class">.link</span>&#123;<br>    <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">5px</span>;<br>&#125;<br><br><br><span class="hljs-comment">/* 导航链接部分 */</span><br><span class="hljs-selector-class">.nav</span> <span class="hljs-selector-class">.nav-list</span>&#123;<br>    <span class="hljs-attribute">float</span>: right;<br>&#125;<br><span class="hljs-selector-class">.nav</span> <span class="hljs-selector-class">.nav-list</span> <span class="hljs-selector-class">.nav-item</span>&#123;<br>    <span class="hljs-attribute">display</span>: inline-block;<br>    <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">5px</span>;<br>&#125;<br></code></pre></td></tr></table></div></figure><p>观察上面代码的运行结果可知：</p><ul><li><code>.nav .user</code>（中间有空格）匹配到<code>class</code>含有<code>nav</code>的元素下面的<code>class</code>含有<code>user</code>的元素，是<code>&lt;span class=&quot;user not-login&quot;&gt;</code>和<code>&lt;span class=&quot;user login&quot;&gt;</code>。</li><li><code>.user.login</code>（中间没有空格）匹配到<code>class</code>同时含有<code>user</code>和<code>login</code>的元素，是<code>&lt;span class=&quot;user login&quot;&gt;</code>。</li><li><code>.nav .user.login</code>（<code>.nav</code>和<code>.user</code>中间有空格，<code>.user</code>和<code>.login</code>中间没有空格）匹配到<code>class</code>含有<code>nav</code>的元素下面的<code>class</code>同时含有<code>user</code>和<code>login</code>的元素，是<code>&lt;span class=&quot;user login&quot;&gt;</code>。</li></ul><hr><p><code>white-space</code> 是 CSS 的一个属性，用于控制元素内空格、换行符和连续空格的处理方式。</p><p>该属性有以下几个取值：</p><ul><li><code>normal</code>：合并连续空格和换行符，忽略换行符前后的空格。</li><li><code>nowrap</code>：合并连续空格和换行符，但不允许文本换行。</li><li><code>pre</code>：保留连续空格和换行符，但不允许文本换行。</li><li><code>pre-wrap</code>：保留连续空格和换行符，允许文本换行。</li><li><code>pre-line</code>：合并连续空格和换行符，允许文本换行。</li></ul><p>例如，如果将 <code>white-space</code> 属性设置为 <code>pre</code>，那么在 HTML 中出现的所有空格和换行符都会被保留，而不会被浏览器忽略或合并。这在需要保留代码格式或排版的情况下非常有用。</p><p>另外，<code>white-space</code> 属性还可以与 <code>text-overflow</code> 属性一起使用，来控制文本溢出的处理方式。例如，将 <code>white-space</code> 设置为 <code>nowrap</code>，并将 <code>text-overflow</code> 设置为 <code>ellipsis</code>，可以在文本过长时自动截断并显示省略号。</p>]]></content>
    
    
    
    <tags>
      
      <tag>前端</tag>
      
      <tag>Vue3</tag>
      
      <tag>CSS</tag>
      
      <tag>HTML</tag>
      
      <tag>TypeScript</tag>
      
      <tag>ElementPlus</tag>
      
      <tag>Vite</tag>
      
      <tag>pinia</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>二.搭建博客</title>
    <link href="/2023/08/25/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2023/08/25/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h1 id="1-参考教程"><a href="#1-参考教程" class="headerlink" title="1.参考教程"></a>1.参考教程</h1><p><code>https://blog.senqiweb.cn/2022/08/26/kv1ltl/#设置公钥和私钥</code></p><p>hexo官网：<a href="https://hexo.io/zh-cn/">https://hexo.io/zh-cn/</a></p><p>hexo主题之fluid：<a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></p><p>hexo fluid文档：<a href="https://hexo.fluid-dev.com/docs/guide">https://hexo.fluid-dev.com/docs/guide</a></p><ul><li>创建文件：hexo new 搭建博客</li><li>生成静态文件：hexo g</li><li>预览博客：hexo s</li><li>部署网站：hexo d</li></ul><p><mark>hexo clean &amp;&amp; hexo g &amp;&amp; hexo s</mark></p><h1 id="2-问题"><a href="#2-问题" class="headerlink" title="2.问题"></a>2.问题</h1><p class="note note-success" style="border-left: 4px solid #f0ad4e;padding: 10px 15px;color: #777;background-color: #fdf8ea;">遇到想要修改的样式第一步是打开控制台！！！</p><p>图片显示问题：<a href="https://zhuanlan.zhihu.com/p/265077468">https://zhuanlan.zhihu.com/p/265077468</a></p><img src="image-20230827182307675.png" alt="image-20230827182307675" style="zoom:30%;" /><p>设置图片根目录：</p><img src="image-20230825134728552.png" style="zoom:50%;" /><p>必须是以下格式：</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-6snhm6lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-6snhm6lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;image-20230918163131185.png&quot;</span> <span class="hljs-attr">alt</span>=<span class="hljs-string">&quot;image-20230918163131185&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;zoom:50%;&quot;</span> /&gt;</span><br></code></pre></td></tr></table></div></figure><p>typora自带格式不生效：</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-djpd38lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-djpd38lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html">![image-20230918170715840](/image-20230918170715840.png)<br></code></pre></td></tr></table></div></figure><hr><p>添加樱花效果：<code>https://cnhuazhu.gitee.io/2021/02/19/Hexo魔改/Hexo添加樱花动态效果背景/</code></p><p>添加到主题下的layout文件夹：</p><img src="image-20230825111055130.png" style="zoom:50%;" /><p>git clone到本地的代码：</p><ol><li>删除node_modules</li><li>npm install</li><li>重新下载fluid主题文件夹  复制到themes\fluid目录下</li></ol><hr><p><mark>.deploy_git</mark>是git部署用的文件。当你为 git 部署选项运行hexo d命令时，Hexo 会创建一个名为.deploy_git的文件夹，并将生成的文件复制到该文件夹。</p><img src="image-20230827181423475.png" alt="image-20230827181423475" style="zoom:40%;" /><ol><li>删除.deploy_git文件夹</li><li>输入<mark>git config --global core.autocrlf false</mark></li><li>依次执行：hexo clean    hexo g    hexo d</li></ol><hr><p>新建.gitignore：过滤node_modules和dist文件夹</p><img src="image-20230827184313722.png" alt="image-20230827184313722" style="zoom:40%;" /><hr><p>hexo中高亮不显示：<code>==我高亮了==</code>→使用<code>&lt;mark&gt;我高亮了&lt;/mark&gt;</code></p><p>英文高亮统一用&#96;&#96;，中文高亮统一用mark。</p><hr><p>github贡献图：</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-ygojgvlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-ygojgvlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://ghchart.rshah.org/409ba5/lan720&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;width:100%&quot;</span>&gt;</span><br></code></pre></td></tr></table></div></figure><img src="image-20230918163131185.png" alt="image-20230918163131185" style="zoom:50%;" /><img src="image-20230919160147542.png" alt="image-20230919160147542" style="zoom:50%;" /><p>或者</p><figure class="highlight yml"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-eh01jwlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-eh01jwlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">githubcalendar:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">priority:</span> <span class="hljs-number">0</span><br>  <span class="hljs-attr">enable_page:</span> <span class="hljs-string">/archives/</span><br>  <span class="hljs-attr">user:</span> <span class="hljs-string">lan720</span><br>  <span class="hljs-attr">layout:</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">class</span><br>    <span class="hljs-attr">name:</span> <span class="hljs-string">container</span><br>    <span class="hljs-attr">index:</span> <span class="hljs-number">1</span><br>  <span class="hljs-attr">githubcalendar_html:</span> <span class="hljs-string">&#x27;&lt;div id=&quot;github-calendar&quot; style=&quot;width:100%;height:auto;padding:10px;margin-bottom:20px&quot;&gt;&lt;div id=&quot;github_loading&quot; style=&quot;width:10%;height:100%;margin:0 auto;display: block&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;  viewBox=&quot;0 0 50 50&quot; style=&quot;enable-background:new 0 0 50 50&quot; xml:space=&quot;preserve&quot;&gt;&lt;path fill=&quot;#d0d0d0&quot; d=&quot;M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z&quot; transform=&quot;rotate(275.098 25 25)&quot;&gt;&lt;animateTransform attributeType=&quot;xml&quot; attributeName=&quot;transform&quot; type=&quot;rotate&quot; from=&quot;0 25 25&quot; to=&quot;360 25 25&quot; dur=&quot;0.6s&quot; repeatCount=&quot;indefinite&quot;&gt;&lt;/animateTransform&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div id=&quot;github_container&quot;&gt;&lt;/div&gt;&lt;/div&gt;&#x27;</span><br>  <span class="hljs-attr">pc_minheight:</span> <span class="hljs-string">200px</span><br>  <span class="hljs-attr">mobile_minheight:</span> <span class="hljs-string">0px</span><br>  <span class="hljs-attr">color:</span> <span class="hljs-string">&quot;[&#x27;#ebedf0&#x27;, &#x27;#f1f8ff&#x27;, &#x27;#dbedff&#x27;, &#x27;#c8e1ff&#x27;, &#x27;#79b8ff&#x27;, &#x27;#2188ff&#x27;, &#x27;#0366d6&#x27;, &#x27;#005cc5&#x27;, &#x27;#044289&#x27;, &#x27;#032f62&#x27;, &#x27;#05264c&#x27;]&quot;</span><br>  <span class="hljs-attr">api:</span> <span class="hljs-string">https://python-github-calendar-api.vercel.app/api</span><br>  <span class="hljs-comment"># api: https://gitcalendar.zfe.space/api</span><br>  <span class="hljs-comment"># api: https://python-gitee-calendar-api.vercel.app/api</span><br>  <span class="hljs-attr">calendar_js:</span> <span class="hljs-string">https://cdn.jsdelivr.net/gh/Zfour/hexo-github-calendar@1.21/hexo_githubcalendar.js</span><br>  <span class="hljs-attr">plus_style:</span> <span class="hljs-string">&quot;#github_container &gt; .position-relative &gt; .border&#123;border:0!important&#125;#github-calendar&#123;position: relative;margin-top: -2rem;background-color: var(--board-bg-color);transition: background-color 0.2s ease-in-out;border-radius: 0.5rem;z-index: 3;-webkit-box-shadow: 0 12px 15px 0 rgb(0 0 0 / 24%), 0 17px 50px 0 rgb(0 0 0 / 19%);box-shadow: 0 12px 15px 0 rgb(0 0 0 / 24%), 0 17px 50px 0 rgb(0 0 0 / 19%);&#125;&quot;</span><br></code></pre></td></tr></table></div></figure><hr><p class="note note-success" style="border-left: 4px solid #42b983;padding: 10px 15px;color: #777;background-color: rgba(66, 185, 131, .1);">添加新样式</p><p>修改鼠标样式和文字选中样式，在themes&#x2F;fluid&#x2F;source&#x2F;css&#x2F;my&#x2F;mouse.styl中添加。</p><p class="note note-success" style="border-left: 4px solid #d9534f;padding: 10px 15px;color: #777;background-color: #fcf1f2;">不是public/css/my文件夹！直接修改main.css文件无效！</p><img src="image-20230921162312844.png" alt="image-20230921162312844" style="zoom:50%;" /><p>在main.styl中引入，不是main：</p><img src="image-20230921162342641.png" alt="image-20230921162342641" style="zoom:50%;" /><hr><p>插入便签：</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-baqgw0lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-baqgw0lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-primary&quot;</span>&gt;</span>标签<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></div></figure><img src="image-20230925140109254.png" alt="image-20230925140109254" style="zoom:40%;" /><p>由于Typora仅支持普通的html标签，不支持class、id、data-*等自定义属性，所以修改主题文件夹不生效，只能添加行内样式：</p><ol><li><p>primary：</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-qtkyxblo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-qtkyxblo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-primary&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border-left: 4px solid #6f42c1;padding: 10px 15px;color: #777;background-color: #f5f0fa;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></div></figure></li><li><p>secondary：</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-36tbmdlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-36tbmdlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-secondary&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border-left: 4px solid #777777;padding: 10px 15px;color: #777;background-color: #f7f7f7;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></div></figure></li><li><p>success：</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-sj9duqlo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-sj9duqlo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-success&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border-left: 4px solid #42b983;padding: 10px 15px;color: #777;background-color: rgba(66, 185, 131, .1);&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></div></figure></li><li><p>danger：</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-fj3nzslo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-fj3nzslo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-danger&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border-left: 4px solid #d9534f;padding: 10px 15px;color: #777;background-color: #fcf1f2;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></div></figure></li><li><p>warning：</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-7uh1m4lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-7uh1m4lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-warning&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border-left: 4px solid #f0ad4e;padding: 10px 15px;color: #777;background-color: #fdf8ea;&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></div></figure></li><li><p>info：</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-12rcq9lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-12rcq9lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;note note-info&quot;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&quot;border-left: 4px solid #428bca;padding: 10px 15px;color: #777;background-color: rgb(238, 247, 250);&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><br></code></pre></td></tr></table></div></figure></li></ol><p>插入标签：</p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-qi0nfalo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-qi0nfalo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;label label-primary&quot;</span>&gt;</span>Label<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br></code></pre></td></tr></table></div></figure><img src="image-20230926175453969.png" alt="image-20230926175453969" style="zoom:60%;" /><hr><p>解决浏览器端的语法高亮库highlight.js不支持vue代码高亮：</p><p><a href="https://github.com/highlightjs/highlightjs-vue/">https://github.com/highlightjs/highlightjs-vue/</a></p><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-3rdkt6lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-3rdkt6lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/highlightjs&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://cdn.jsdelivr.net/npm/highlightjs-vue&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">  hljs.<span class="hljs-title function_">registerLanguage</span>(<span class="hljs-string">&quot;vue&quot;</span>, <span class="hljs-variable language_">window</span>.<span class="hljs-property">hljsDefineVue</span>);</span><br><span class="language-javascript">  hljs.<span class="hljs-title function_">initHighlightingOnLoad</span>();</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></div></figure><img src="image-20230926175206543.png" alt="image-20230926175206543" style="zoom:50%;" /><p>不能单独使用<code>&lt;script&gt;&lt;/script&gt;</code>，在<code>&lt;script&gt;&lt;/script&gt;</code>前面一定要先加<code>&lt;template&gt;&lt;/template&gt;</code>才能生效！</p><hr><p>必须使用<code>&lt;br/&gt;</code>才能换行：</p><img src="image-20231010144758522.png" alt="image-20231010144758522" style="zoom:50%;" /><hr><p>修改目录样式：</p><img src="image-20231013101526690.png" alt="image-20231013101526690" style="zoom:50%;" /><hr><p>hexo中使用iconfont图标：</p><ol><li><p>生成阿里在线链接：</p><img src="image-20231013162830707.png" alt="image-20231013162830707" style="zoom:50%;" /></li><li><p>修改custom_css：</p><img src="image-20231013162936840.png" alt="image-20231013162936840" style="zoom:50%;" /><p class="note note-success" style="border-left: 4px solid #d9534f;padding: 10px 15px;color: #777;background-color: #fcf1f2;">在_config.fluid.yml主题文件夹下修改，不是_config.yml文件夹，否则样式不生效或者样式被覆盖！</p></li><li><p>使用iconfont图标：</p><img src="image-20231013163014621.png" alt="image-20231013163014621" style="zoom:50%;" /><p>使用彩色iconfont图标：勾选彩色</p><img src="image-20231024145633308.png" alt="image-20231024145633308" style="zoom:50%;" /></li></ol><hr><p>代码块折叠：</p><img src="image-20231012145306284.png" alt="image-20231012145306284" style="zoom:50%;" /><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-cl7hv7lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-cl7hv7lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-meta">&quot;use strict&quot;</span>;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">getUuid</span>(<span class="hljs-params"></span>) &#123;<br>  <span class="hljs-keyword">return</span> <span class="hljs-title class_">Math</span>.<span class="hljs-title function_">random</span>().<span class="hljs-title function_">toString</span>(<span class="hljs-number">36</span>).<span class="hljs-title function_">substring</span>(<span class="hljs-number">2</span>, <span class="hljs-number">8</span>) + <span class="hljs-title class_">Date</span>.<span class="hljs-title function_">now</span>().<span class="hljs-title function_">toString</span>(<span class="hljs-number">36</span>);<br>&#125;<br><br>hexo.<span class="hljs-property">extend</span>.<span class="hljs-property">filter</span>.<span class="hljs-title function_">register</span>(<br>  <span class="hljs-string">&quot;after_post_render&quot;</span>,<br>  <span class="hljs-function">(<span class="hljs-params">data</span>) =&gt;</span> &#123;<br>    <span class="hljs-keyword">const</span> &#123; line_number, lib &#125; = hexo.<span class="hljs-property">theme</span>.<span class="hljs-property">config</span>.<span class="hljs-property">code</span>.<span class="hljs-property">highlight</span>;<br><br>    <span class="hljs-keyword">let</span> reg;<br>    <span class="hljs-keyword">if</span> (lib === <span class="hljs-string">&quot;highlightjs&quot;</span>) &#123;<br>      <span class="hljs-keyword">if</span> (line_number) &#123;<br>        reg = <span class="hljs-regexp">/(&lt;figure class=&quot;highlight.+?&gt;)(.+?hljs (.*?)&quot;.+?)(&lt;\/figure&gt;)/gim</span>s;<br>      &#125; <span class="hljs-keyword">else</span> &#123;<br>        reg = <span class="hljs-regexp">/(&lt;div class=&quot;code-wrapper.+?&gt;)(.+?hljs (.*?)&quot;.+?)(&lt;\/div&gt;)/gim</span>s;<br>      &#125;<br>    &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (lib === <span class="hljs-string">&quot;prismjs&quot;</span>) &#123;<br>      reg = <span class="hljs-regexp">/(&lt;div class=&quot;code-wrapper.+?&gt;)(.+?data-language=&quot;(.*?)&quot;.+?)(&lt;\/div&gt;)/gim</span>s;<br>    &#125;<br><br>    data.<span class="hljs-property">content</span> = data.<span class="hljs-property">content</span>.<span class="hljs-title function_">replace</span>(reg, <span class="hljs-function">(<span class="hljs-params">match, begin, inner, lang, end, offset, string</span>) =&gt;</span> &#123;<br>      <span class="hljs-keyword">const</span> collapseId = <span class="hljs-string">`collapse-<span class="hljs-subst">$&#123;getUuid()&#125;</span>`</span>;<br>      <span class="hljs-keyword">const</span> collapseBtn = <span class="hljs-string">`&lt;i class=&quot;iconfont icon-github-fill&quot; type=&quot;button&quot; data-toggle=&quot;collapse&quot; data-target=&quot;#<span class="hljs-subst">$&#123;collapseId&#125;</span>&quot;&gt;&lt;/i&gt;`</span>;<br>      <span class="hljs-keyword">const</span> collapseDiv = <span class="hljs-string">`&lt;div class=&quot;collapse show&quot; id=&quot;<span class="hljs-subst">$&#123;collapseId&#125;</span>&quot;&gt;<span class="hljs-subst">$&#123;inner&#125;</span>&lt;/div&gt;`</span>;<br>      <span class="hljs-keyword">const</span> langSpan = <span class="hljs-string">`&lt;span&gt;<span class="hljs-subst">$&#123;lang&#125;</span>&lt;/span&gt;`</span>;<br>      <span class="hljs-keyword">return</span> begin + collapseBtn + langSpan + collapseDiv + end;<br>    &#125;);<br>    <span class="hljs-keyword">return</span> data;<br>  &#125;,<br>  <span class="hljs-number">10000</span><br>);<br></code></pre></td></tr></table></div></figure><img src="image-20231012145352943.png" alt="image-20231012145352943" style="zoom:50%;" /><figure class="highlight stylus"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-ghk126lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-ghk126lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-tag">figure</span><span class="hljs-selector-class">.highlight</span> &#123;<br>    <span class="hljs-attribute">background</span>: <span class="hljs-built_in">rgb</span>(<span class="hljs-number">230</span>, <span class="hljs-number">235</span>, <span class="hljs-number">241</span>);<br>    <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">0.5rem</span>;<br><br>    <span class="hljs-selector-tag">table</span> &#123;<br>        <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-number">0.5rem</span> <span class="hljs-number">0.5rem</span>;<br>    &#125;<br><br>    <span class="hljs-selector-class">.fas</span><span class="hljs-selector-class">.fa-angle-down</span> &#123;<br>        <span class="hljs-attribute">transform</span>: none;<br>        <span class="hljs-attribute">transition</span>: transform <span class="hljs-number">0.2s</span> ease-in-out;<br><br>        &amp;<span class="hljs-selector-class">.collapsed</span> &#123;<br>            <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">rotate</span>(-<span class="hljs-number">90deg</span>);<br>        &#125;<br>    &#125;<br><br>    &gt; <span class="hljs-selector-tag">i</span> &#123;<br>        <span class="hljs-attribute">color</span>: <span class="hljs-number">#777777</span>;<br>        <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">10px</span>;<br>        <span class="hljs-attribute">line-height</span>: <span class="hljs-number">2rem</span>;<br>    &#125;<br><br>    &gt; <span class="hljs-selector-tag">span</span> &#123;<br>        <span class="hljs-attribute">color</span>: <span class="hljs-number">#777777</span>;<br>        <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">10px</span>;<br>        <span class="hljs-attribute">font-weight</span>: bold;<br>    &#125;<br><br>    <span class="hljs-selector-tag">td</span><span class="hljs-selector-pseudo">:first-child</span> &#123;<br>        <span class="hljs-attribute">position</span>: sticky;<br>        <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;<br>        <span class="hljs-attribute">z-index</span>: <span class="hljs-number">1</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></div></figure><hr><p>修改本文最后更新于的时间的显示格式：</p><figure class="highlight avrasm"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-5a0kk4lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-5a0kk4lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">date_format:</span> <span class="hljs-string">&quot;LL HH:mm&quot;</span><br></code></pre></td></tr></table></div></figure><img src="image-20231013101210574.png" alt="image-20231013101210574" style="zoom:50%;" /><hr><p>添加和风天气组件：<a href="https://widget.qweather.com/">https://widget.qweather.com/</a></p><img src="image-20231016161018794.png" alt="image-20231016161018794" style="zoom:50%;" /><figure class="highlight html"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-spww81lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-spww81lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;weather-plugin&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;he-plugin-simple&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">    <span class="hljs-variable constant_">WIDGET</span> = &#123;</span><br><span class="language-javascript">        <span class="hljs-string">&quot;CONFIG&quot;</span>: &#123;</span><br><span class="language-javascript">            <span class="hljs-string">&quot;modules&quot;</span>: <span class="hljs-string">&quot;012&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-string">&quot;background&quot;</span>: <span class="hljs-string">&quot;5&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-string">&quot;tmpColor&quot;</span>: <span class="hljs-string">&quot;FFFFFF&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-string">&quot;tmpSize&quot;</span>: <span class="hljs-string">&quot;16&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-string">&quot;cityColor&quot;</span>: <span class="hljs-string">&quot;FFFFFF&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-string">&quot;citySize&quot;</span>: <span class="hljs-string">&quot;16&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-string">&quot;aqiColor&quot;</span>: <span class="hljs-string">&quot;FFFFFF&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-string">&quot;aqiSize&quot;</span>: <span class="hljs-string">&quot;16&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-string">&quot;weatherIconSize&quot;</span>: <span class="hljs-string">&quot;24&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-string">&quot;alertIconSize&quot;</span>: <span class="hljs-string">&quot;18&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-comment">// &quot;padding&quot;: &quot;10px 10px 10px 10px&quot;,</span></span><br><span class="language-javascript">            <span class="hljs-string">&quot;shadow&quot;</span>: <span class="hljs-string">&quot;0&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-string">&quot;language&quot;</span>: <span class="hljs-string">&quot;auto&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-string">&quot;borderRadius&quot;</span>: <span class="hljs-string">&quot;5&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-string">&quot;fixed&quot;</span>: <span class="hljs-string">&quot;false&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-string">&quot;vertical&quot;</span>: <span class="hljs-string">&quot;top&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-string">&quot;horizontal&quot;</span>: <span class="hljs-string">&quot;left&quot;</span>,</span><br><span class="language-javascript">            <span class="hljs-string">&quot;key&quot;</span>: <span class="hljs-string">&quot;9cf07a14c8a74c4198ee7f49b868e0c8&quot;</span></span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    &#125;</span><br><span class="language-javascript"></span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;https://widget.qweather.net/simple/static/js/he-simple-common.js?v=2.0&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br></code></pre></td></tr></table></div></figure><img src="image-20231016160942811.png" alt="image-20231016160942811" style="zoom:50%;" /><img src="image-20231016160722999.png" alt="image-20231016160722999" style="zoom:50%;" /><hr><p>添加打赏功能：</p><figure class="highlight plaintext"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-vg1f6clo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-vg1f6clo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs ejs">&lt;!-- 添加打赏模块 --&gt;<br>&lt;div class=&quot;reward-container&quot;&gt;<br>    &lt;% if (theme.donate.enable) &#123; %&gt;<br>    &lt;button id=&quot;rewardBtn&quot; class=&quot;reward-btn&quot;&gt;<br>        &lt;% if (config.language==&#x27;zh-CN&#x27; ) &#123; %&gt;<br>        ❤ 打赏<br>        &lt;% &#125; else &#123; %&gt;<br>        Donate<br>        &lt;% &#125; %&gt;<br>    &lt;/button&gt;<br>    &lt;p class=&quot;tea&quot;&gt;“&lt;%= theme.donate.message %&gt;”&lt;/p&gt;<br>    &lt;div id=&quot;rewardImgContainer&quot; class=&quot;reward-img-container&quot;&gt;<br>        &lt;div class=&quot;singleImgContainer&quot;&gt;<br>            &lt;img id=&quot;wechatImg&quot; class=&quot;reward-img&quot; src=&quot;&lt;%= theme.donate.wechatpay %&gt;&quot; alt=&quot;微信二维码&quot;&gt;<br>            &lt;p class=&quot;wechatPay&quot;&gt;微信支付&lt;/p&gt;<br>        &lt;/div&gt;<br>        &lt;div class=&quot;singleImgContainer&quot;&gt;<br>            &lt;img id=&quot;alipayImg&quot; class=&quot;reward-img&quot; src=&quot;&lt;%= theme.donate.alipay %&gt;&quot; alt=&quot;支付宝二维码&quot;&gt;<br>            &lt;p class=&quot;aliPay&quot;&gt;支付宝支付&lt;/p&gt;<br>        &lt;/div&gt;<br>    &lt;/div&gt;<br>    &lt;% &#125; %&gt;<br>&lt;/div&gt;<br></code></pre></td></tr></table></div></figure><img src="image-20231017105504390.png" alt="image-20231017105504390" style="zoom:50%;" /><p>添加主题配置：</p><figure class="highlight yaml"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-w7dtp3lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-w7dtp3lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Donate 自己为 Fluid 主题增加的打赏功能</span><br><span class="hljs-comment"># `message` 是打赏提示语，可自定义</span><br><span class="hljs-comment"># `alipay` 是支付宝付款码， `wechatpay` 是微信付款码。</span><br><span class="hljs-attr">donate:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">message:</span> <span class="hljs-string">觉得不错的话，给个打赏吧</span> <span class="hljs-string">୧(๑•̀⌄•́๑)૭</span> <br>  <span class="hljs-attr">alipay:</span> <span class="hljs-string">/image/alipay.png</span><br>  <span class="hljs-attr">wechatpay:</span> <span class="hljs-string">/image/wechatpay.png</span><br></code></pre></td></tr></table></div></figure><img src="image-20231017105639727.png" alt="image-20231017105639727" style="zoom:50%;" /><p>图片添加在img文件夹下：</p><img src="image-20231017111859101.png" alt="image-20231017111859101" style="zoom:50%;" /><p>添加css样式：</p><figure class="highlight css"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-3f7rxolo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-3f7rxolo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.reward-container</span>&#123;<br>    <span class="hljs-attribute">display</span>: flex;<br>    <span class="hljs-attribute">flex-direction</span>: column;<br>    <span class="hljs-attribute">align-items</span>: center;<br>    <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">50px</span>;<br><br>    <span class="hljs-selector-class">.tea</span>&#123;<br>        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0.8125em</span>;<br>        <span class="hljs-attribute">color</span>: <span class="hljs-number">#999999</span>;<br>        <span class="hljs-attribute">margin-top</span>: <span class="hljs-number">10px</span>;<br>    &#125;<br><br>    <span class="hljs-selector-class">.reward-btn</span>&#123;<br>        <span class="hljs-attribute">padding</span>: <span class="hljs-number">8px</span> <span class="hljs-number">24px</span>;<br>        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">18px</span>;<br>        <span class="hljs-attribute">background-color</span>: lavender;<br>        <span class="hljs-attribute">color</span>: <span class="hljs-number">#e3a850</span>;<br>        <span class="hljs-attribute">border</span>: none;<br>        <span class="hljs-attribute">cursor</span>: pointer;<br>        <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">10px</span>;<br>    &#125;<br><br>    <span class="hljs-selector-class">.reward-img-container</span>&#123;<br>        <span class="hljs-attribute">display</span>: none;<br>        <span class="hljs-comment">/* 图片容器的透明度 */</span><br>        <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;<br>        <span class="hljs-comment">/* 过渡效果,使动画更平滑 */</span><br>        <span class="hljs-attribute">transition</span>: opacity <span class="hljs-number">2s</span> ease;<br>    &#125;<br><br>    <span class="hljs-selector-class">.reward-img</span>&#123;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-number">150px</span>;<br>        <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">4px</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/* 单个图片的容器 */</span><br>    <span class="hljs-selector-class">.singleImgContainer</span>&#123;<br>        <span class="hljs-attribute">width</span>: <span class="hljs-number">50%</span>;<br>        <span class="hljs-attribute">height</span>: <span class="hljs-number">100%</span>;<br>        <span class="hljs-attribute">margin-left</span>: <span class="hljs-number">20px</span>;<br>        <span class="hljs-attribute">margin-right</span>: <span class="hljs-number">20px</span>;<br>    &#125;<br><br>    <span class="hljs-comment">/* 微信支付和支付宝支付的文字样式 */</span><br>    <span class="hljs-selector-class">.wechatPay</span>,<span class="hljs-selector-class">.aliPay</span>&#123;<br>        <span class="hljs-attribute">text-align</span>: center;<br>        <span class="hljs-attribute">font-size</span>: <span class="hljs-number">0.8125em</span>;<br>        <span class="hljs-attribute">color</span>: <span class="hljs-number">#999999</span>;<br>        <span class="hljs-attribute">padding-top</span>: <span class="hljs-number">0px</span>;<br>        <span class="hljs-attribute">padding-bottom</span>: <span class="hljs-number">0px</span>;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></div></figure><img src="image-20231026104933191.png" alt="image-20231026104933191" style="zoom:50%;" /><p>main.styl中引入css文件：</p><img src="image-20231017110023550.png" alt="image-20231017110023550" style="zoom:50%;" /><p>添加js文件：</p><figure class="highlight js"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-ek34e5lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-ek34e5lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-keyword">const</span> rewardBtn = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;rewardBtn&#x27;</span>);<br><span class="hljs-keyword">const</span> rewardImgContainer = <span class="hljs-variable language_">document</span>.<span class="hljs-title function_">getElementById</span>(<span class="hljs-string">&#x27;rewardImgContainer&#x27;</span>);<br><br><span class="hljs-keyword">if</span>(rewardBtn)&#123;<br>rewardBtn.<span class="hljs-property">onclick</span> = <span class="hljs-function">() =&gt;</span> &#123;<br>rewardImgContainer.<span class="hljs-property">style</span>.<span class="hljs-property">display</span> = (rewardImgContainer.<span class="hljs-property">style</span>.<span class="hljs-property">display</span> === <span class="hljs-string">&#x27;none&#x27;</span> || rewardImgContainer.<span class="hljs-property">style</span>.<span class="hljs-property">display</span> === <span class="hljs-string">&#x27;&#x27;</span>) ? <span class="hljs-string">&#x27;inline-flex&#x27;</span> : <span class="hljs-string">&#x27;none&#x27;</span><br><span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>rewardImgContainer.<span class="hljs-property">style</span>.<span class="hljs-property">opacity</span> = (rewardImgContainer.<span class="hljs-property">style</span>.<span class="hljs-property">opacity</span> === <span class="hljs-string">&#x27;0&#x27;</span> || rewardImgContainer.<span class="hljs-property">style</span>.<span class="hljs-property">opacity</span> === <span class="hljs-string">&#x27;&#x27;</span>) ? <span class="hljs-string">&#x27;1&#x27;</span> : <span class="hljs-string">&#x27;0&#x27;</span><br>&#125;, <span class="hljs-number">10</span>);<br>&#125;<br>&#125;<br></code></pre></td></tr></table></div></figure><img src="image-20231017105921936.png" alt="image-20231017105921936" style="zoom:50%;" /><p>引入js文件：</p><img src="image-20231017105843646.png" alt="image-20231017105843646" style="zoom:50%;" /><hr><p>媒体查询：</p><figure class="highlight css"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-14f7zblo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-14f7zblo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-keyword">@media</span> (<span class="hljs-attribute">max-width</span>: <span class="hljs-number">100vh</span>)<br>#board &#123;<br>    <span class="hljs-attribute">margin-top</span>: -<span class="hljs-number">1rem</span> <span class="hljs-meta">!important</span>;<br>    <span class="hljs-attribute">width</span>: <span class="hljs-number">83%</span> <span class="hljs-meta">!important</span>;<br>&#125;<br></code></pre></td></tr></table></div></figure><img src="image-20231019110918493.png" alt="image-20231019110918493" style="zoom:50%;" /><hr><p>解决移动端字体不生效问题：</p><p class="note note-success" style="border-left: 4px solid #428bca;padding: 10px 15px;color: #777;background-color: #eef7fa;">中文字体可以在http://www.reeji.com/上查找</p><ol><li>下载ttf文件：</li></ol><img src="image-20231020101213689.png" alt="image-20231020101213689" style="zoom:50%;" /><ol start="2"><li>使用<code>@font-face</code>：允许网页开发者为其网页指定在线字体；字体能从远程服务器或者用户本地安装的字体加载。如果提供了 local() 函数，从用户本地查找指定的字体名称，并且找到了一个匹配项，本地字体就会被使用。否则，字体就会使用 url() 函数下载的资源。在同时使用 url() 和 local() 功能时，为了用户已经安装的字体副本在需要使用时被使用，如果在用户本地没有找到字体副本就会去使用户下载的副本查找字体。@font-face 规则不仅仅使用在 CSS 的顶层，还可以用在任何 CSS 条件组规则中。</li></ol><figure class="highlight css"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-6hi7l0lo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-6hi7l0lo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-keyword">@font-face</span>&#123;<br>    <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;KaiTi&#x27;</span>;<br>    <span class="hljs-attribute">src</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;./mycustom/ttf/KaiTi.ttf&#x27;</span>); <br>&#125;<br><br><span class="hljs-keyword">@font-face</span>&#123;<br>    <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;Times New Roman&#x27;</span>;<br>    <span class="hljs-attribute">src</span>: <span class="hljs-built_in">url</span>(<span class="hljs-string">&#x27;./mycustom/ttf/Times New Roman.ttf&#x27;</span>); <br>&#125;<br><br><span class="hljs-selector-tag">html</span>,<br><span class="hljs-selector-tag">body</span> &#123;<br>    <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;Times New Roman&#x27;</span>,KaiTi <span class="hljs-meta">!important</span>;<br>&#125;<br><br><span class="hljs-selector-class">.markdown-body</span>&#123;<br>    <span class="hljs-attribute">font-family</span>: <span class="hljs-string">&#x27;Times New Roman&#x27;</span>,KaiTi <span class="hljs-meta">!important</span>;<br>&#125;<br></code></pre></td></tr></table></div></figure><img src="image-20231020111623065.png" alt="image-20231020111623065" style="zoom:50%;" /><p>不能在一个 CSS 选择器中定义<code>@font-face</code>。例如，这样写是无效的：</p><figure class="highlight css"><i class="iconfont icon-window-down" type="button" data-toggle="collapse" data-target="#collapse-d4ijzalo8fs1ot" style="font-size:1.5em;"></i><div class="collapse show" id="collapse-d4ijzalo8fs1ot"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs css"><span class="hljs-selector-class">.className</span> &#123;<br>  <span class="hljs-keyword">@font-face</span> &#123;<br>    <span class="hljs-attribute">font-family</span>: MyHelvetica;<br>    <span class="hljs-attribute">src</span>: <span class="hljs-built_in">local</span>(<span class="hljs-string">&quot;Helvetica Neue Bold&quot;</span>), <span class="hljs-built_in">local</span>(<span class="hljs-string">&quot;HelveticaNeue-Bold&quot;</span>),<br>      <span class="hljs-built_in">url</span>(<span class="hljs-string">MgOpenModernaBold.ttf</span>);<br>    <span class="hljs-attribute">font-weight</span>: bold;<br>  &#125;<br></code></pre></td></tr></table></div></figure><ol start="3"><li>在main.styl中引用：</li></ol><img src="image-20231020102237376.png" alt="image-20231020102237376" style="zoom:50%;" /><p>效果：</p><img src="image-20231020103554840.png" alt="image-20231020103554840" style="zoom:50%;" /><hr><p>修改主题明暗背景色：</p><img src="image-20231025172617227.png" alt="image-20231025172617227" style="zoom:50%;" /><p class="note note-success" style="border-left: 4px solid #777777;padding: 10px 15px;color: #777;background-color: #f7f7f7;">修改scrollbar_color和scrollbar_hover_color没生效</p>]]></content>
    
    
    
    <tags>
      
      <tag>hexo</tag>
      
      <tag>fluid</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一.上传大文件到Github</title>
    <link href="/2023/08/24/%E4%B8%8A%E4%BC%A0%E5%A4%A7%E6%96%87%E4%BB%B6%E5%88%B0Github/"/>
    <url>/2023/08/24/%E4%B8%8A%E4%BC%A0%E5%A4%A7%E6%96%87%E4%BB%B6%E5%88%B0Github/</url>
    
    <content type="html"><![CDATA[<p>Github文档：<a href="https://docs.github.com/zh">https://docs.github.com/zh</a></p><p>上传超过100M的单个文件到github：可先进行pdf压缩</p><p>下载lfs：<a href="https://git-lfs.com/">https://git-lfs.com/</a></p><ol><li><p>Github新建空仓库</p></li><li><p>本地新建空文件夹</p></li><li><p>git lfs install</p></li><li><p>git init</p></li><li><p>git lfs track &quot;*.zip&quot; </p><ol><li>追踪单个文件：<code>git lfs track &quot;FrameworkFold/XXXFramework/xxx&quot;</code></li><li>追踪指定类型的文件：<code>git lfs track &quot;*.dmg&quot;</code></li><li>不再使用 Git LFS 管理指定的文件：<code>git lfs untrack &quot;*.dmg&quot;</code></li><li>追踪指定目录下的文件：<code>git lfs track &quot;FrameworkFold/*&quot;</code></li><li>枚举目前所有被 Git LFS 管理的具体文件：<code>git lfs ls-files</code></li></ol></li><li><p>git add .gitattributes</p></li><li><p>git config --global user.email &quot;<a href="mailto:&#50;&#x31;&#57;&#55;&#57;&#49;&#x33;&#x36;&#x36;&#x35;&#x40;&#x71;&#113;&#46;&#99;&#111;&#x6d;">&#50;&#x31;&#57;&#55;&#57;&#49;&#x33;&#x36;&#x36;&#x35;&#x40;&#x71;&#113;&#46;&#99;&#111;&#x6d;</a>&quot;</p></li><li><p>git config --global <a href="http://user.name/">user.name</a> &quot;lan720&quot;</p></li><li><p>git commit -m &quot;提交 .gitattributes 文件&quot;</p></li><li><p>git remote add origin <a href="mailto:git@github.com">git@github.com</a>:lan720&#x2F;study.git</p></li><li><p>git push origin master</p></li><li><p>加入 代码随想录1.assets.zip</p></li><li><p>git add .</p></li><li><p>git commit -m &quot;提交&quot;</p></li><li><p>git push origin master</p></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>git</tag>
      
      <tag>lfs</tag>
      
      <tag>Github</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
